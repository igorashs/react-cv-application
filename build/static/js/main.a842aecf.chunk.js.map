{"version":3,"sources":["lib/cvPDF.js","components/AppHeader/index.js","components/AppHeader/AppHeader.js","components/CVForm/PersonalInformationSection/PersonalInformationInput/index.js","components/CVForm/PersonalInformationSection/PersonalInformationInput/PersonalInformationInput.js","components/CVForm/PersonalInformationSection/PersonalInformationView/index.js","components/CVForm/PersonalInformationSection/PersonalInformationView/PersonalInformationView.js","components/CVForm/PersonalInformationSection/index.js","components/CVForm/PersonalInformationSection/PersonalInformationSection.js","components/CVForm/EducationSection/EducationList/EducationItem/EducationInput/index.js","components/CVForm/EducationSection/EducationList/EducationItem/EducationInput/EducationInput.js","lib/utils.js","components/CVForm/EducationSection/EducationList/EducationItem/EducationView/index.js","components/CVForm/EducationSection/EducationList/EducationItem/EducationView/EducationView.js","components/CVForm/EducationSection/EducationList/EducationItem/index.js","components/CVForm/EducationSection/EducationList/EducationItem/EducationItem.js","components/CVForm/EducationSection/EducationList/index.js","components/CVForm/EducationSection/EducationList/EducationList.js","components/CVForm/EducationSection/index.js","components/CVForm/EducationSection/EducationSection.js","components/CVForm/WorkExperienceSection/WorkExperienceList/WorkExperienceItem/WorkExperienceInput/index.js","components/CVForm/WorkExperienceSection/WorkExperienceList/WorkExperienceItem/WorkExperienceInput/WorkExperienceInput.js","components/CVForm/WorkExperienceSection/WorkExperienceList/WorkExperienceItem/WorkExperienceView/index.js","components/CVForm/WorkExperienceSection/WorkExperienceList/WorkExperienceItem/WorkExperienceView/WorkExperienceView.js","components/CVForm/WorkExperienceSection/WorkExperienceList/WorkExperienceItem/index.js","components/CVForm/WorkExperienceSection/WorkExperienceList/WorkExperienceItem/WorkExperienceItem.js","components/CVForm/WorkExperienceSection/WorkExperienceList/index.js","components/CVForm/WorkExperienceSection/WorkExperienceList/WorkExperienceList.js","components/CVForm/WorkExperienceSection/index.js","components/CVForm/WorkExperienceSection/WorkExperienceSection.js","components/CVForm/CreateCVSection/index.js","components/CVForm/CreateCVSection/CreateCVSection.js","lib/validator.js","components/CVForm/CVForm.js","components/CVForm/index.js","App.js","index.js"],"names":["CVFactory","doc","jsPDF","curY","addY","y","addPersonalInfo","personalInfo","setFont","setFontSize","text","line","firstName","length","lastName","email","phoneNumber","addEducations","educations","forEach","edu","qualificationTitle","organization","format","fromDate","isOngoing","toDate","addWorkExperiences","workExperiences","work","occupationTitle","employer","responsibilities","trim","split","l","subLines","push","substring","saveFile","title","save","AppHeader","AppBar","Box","p","Typography","variant","component","PersonalInformationInput","props","info","handleChange","handleClick","isEditableForm","errors","Fragment","Grid","item","xs","sm","TextField","label","id","fullWidth","error","helperText","value","onChange","e","target","type","defaultCountry","display","gridTemplateColumns","Button","color","onClick","disabled","isValid","PersonalInformationView","justifyContent","alignItems","mt","width","Divider","PersonalInformationSection","useState","isEditable","setIsEditable","handleEdit","state","useEffect","container","spacing","EducationInput","education","isAlone","handleSaveClick","handleDeleteClick","md","inputVariant","placeholder","disableFuture","date","FormControlLabel","control","Switch","checked","gridColumnGap","areFieldsCompleted","formatDate","isNaN","EducationView","handleEditClick","gridRowGap","EducationItem","isNew","setIsNew","handleDelete","EducationList","errorsList","List","disablePadding","map","ListItem","key","disableGutters","style","padding","flexDirection","minWidth","find","my","EducationSection","handleAdd","size","WorkExperienceInput","workExperience","rows","multiline","WorkExperienceView","WorkExperienceItem","WorkExperienceList","WorkExperienceSection","CreateCVSection","validateName","validateEmail","match","validatePhone","validateStartDate","start","end","Date","getTime","validateEndDate","hasErrors","validatePersonalInformation","personalInformation","Object","values","validateEducations","validateWorkExperiences","sectionsErrors","areEducationsValid","ed","areWorkExperiencesValid","w","initEducationID","uuidv4","initWorkExperienceID","CVForm","setPersonalInfo","setEducations","setWorkExperiences","setSectionsErrors","setIsEditableForm","isPreview","setIsPreview","onSubmit","preventDefault","validator","onCVCreate","window","scrollTo","field","prevState","educationsErrors","filter","workExperiencesErrors","App","darkTheme","createMuiTheme","palette","ThemeProvider","theme","utils","DateFnsUtils","CssBaseline","Container","cv","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a842aecf.chunk.js","sourcesContent":["import { jsPDF } from 'jspdf';\nimport { format } from 'date-fns';\n\n// Y Position\nconst SEPARATOR = 6;\nconst HEADING = 10;\nconst SUB_HEADING = 10;\nconst DETAIL = 8;\nconst SMALL_SEPARATOR = 4;\n\nconst CVFactory = () => {\n  const doc = new jsPDF();\n\n  // initial position\n  let curX = 10;\n  let curY = 4;\n\n  const addY = (y) => {\n    curY += y;\n  };\n\n  return {\n    addPersonalInfo: (personalInfo) => {\n      // Heading\n      doc.setFont('Helvetica', 'bold');\n      doc.setFontSize(20);\n      addY(HEADING);\n      doc.text('Personal Info', curX, curY);\n\n      // separator\n      addY(SEPARATOR);\n      doc.line(curX, curY, 160, curY, 'F');\n\n      // subHeading\n      doc.setFontSize(16);\n      addY(SUB_HEADING);\n      if (personalInfo.firstName.length + personalInfo.lastName.length > 60) {\n        doc.text(personalInfo.firstName, curX, curY);\n        addY(SUB_HEADING);\n        doc.text(personalInfo.lastName, curX, curY);\n      } else {\n        doc.text(\n          `${personalInfo.firstName} ${personalInfo.lastName}`,\n          curX,\n          curY\n        );\n      }\n\n      // details\n      doc.setFont('Helvetica', 'normal');\n      doc.setFontSize(14);\n      addY(DETAIL);\n      doc.text(personalInfo.email, curX, curY);\n      addY(DETAIL);\n      doc.text(personalInfo.phoneNumber, curX, curY);\n\n      // small separator\n      addY(SMALL_SEPARATOR);\n      doc.line(curX, curY, 100, curY, 'F');\n    },\n    addEducations: (educations) => {\n      // Heading\n      doc.setFont('Helvetica', 'bold');\n      doc.setFontSize(20);\n      addY(HEADING);\n      doc.text('Education and training', curX, curY);\n\n      // separator\n      addY(SEPARATOR);\n      doc.line(curX, curY, 160, curY, 'F');\n\n      educations.forEach((edu) => {\n        // subHeading\n        doc.setFont('Helvetica', 'bold');\n        doc.setFontSize(16);\n        addY(SUB_HEADING);\n        doc.text(edu.qualificationTitle, curX, curY);\n\n        //details\n        doc.setFont('Helvetica', 'normal');\n        doc.setFontSize(14);\n        addY(DETAIL);\n        doc.text(edu.organization, curX, curY);\n        doc.setFontSize(12);\n        addY(DETAIL);\n        doc.text(\n          `${format(edu.fromDate, 'dd/MM/yyyy')} - ${\n            edu.isOngoing ? 'Current' : format(edu.toDate, 'dd/MM/yyyy')\n          }`,\n          curX,\n          curY\n        );\n\n        // small separator\n        addY(SMALL_SEPARATOR);\n        doc.line(curX, curY, 100, curY, 'F');\n      });\n    },\n    addWorkExperiences: (workExperiences) => {\n      // Heading\n      doc.setFont('Helvetica', 'bold');\n      doc.setFontSize(20);\n      addY(HEADING);\n      doc.text('Work Experience', curX, curY);\n\n      // separator\n      addY(SEPARATOR);\n      doc.line(curX, curY, 160, curY, 'F');\n\n      workExperiences.forEach((work) => {\n        // subHeading\n        doc.setFont('Helvetica', 'bold');\n        doc.setFontSize(16);\n        addY(SUB_HEADING);\n        doc.text(work.occupationTitle, curX, curY);\n\n        //details\n        doc.setFont('Helvetica', 'normal');\n        doc.setFontSize(14);\n        addY(DETAIL);\n        doc.text(work.employer, curX, curY);\n        doc.setFontSize(12);\n        addY(DETAIL);\n        doc.text(\n          `${format(work.fromDate, 'dd/MM/yyyy')} - ${\n            work.isOngoing ? 'Current' : format(work.toDate, 'dd/MM/yyyy')\n          }`,\n          curX,\n          curY\n        );\n\n        const lines = work.responsibilities.trim().split('\\n'); // trying not to shit too much!\n        lines.forEach((line) => {\n          if (line.length > 90) {\n            let l = line;\n            const subLines = [];\n\n            while (l.length > 90) {\n              subLines.push(`${l.substring(0, 90)}`);\n              l = l.substring(90);\n            }\n            subLines.push(l.trim());\n\n            subLines.forEach((l) => {\n              addY(DETAIL);\n              doc.text(l, curX, curY);\n            });\n          } else {\n            if (line) {\n              addY(DETAIL);\n              doc.text(line, curX, curY);\n            }\n          }\n        });\n\n        // small separator\n        addY(SMALL_SEPARATOR);\n        doc.line(curX, curY, 100, curY, 'F');\n      });\n    },\n    saveFile: (title) => {\n      doc.save(title);\n    }\n  };\n};\n\nexport default CVFactory;\n","import AppHeader from './AppHeader';\n\nexport default AppHeader;\n","import React from 'react';\nimport { AppBar, Box, Typography } from '@material-ui/core';\n\nexport default function AppHeader() {\n  return (\n    <AppBar>\n      <Box p={1.25}>\n        <Typography variant='h4' component='h1'>\n          CV-Application\n        </Typography>\n        <Typography variant='subtitle1' component='h2'>\n          Make your CV!\n        </Typography>\n      </Box>\n    </AppBar>\n  );\n}\n","import PersonalInformationInput from './PersonalInformationInput';\n\nexport default PersonalInformationInput;\n","import React from 'react';\nimport { TextField, Grid, Button, Box } from '@material-ui/core';\nimport PhoneField from 'material-ui-phone-number';\n\nexport default function PersonalInformationInput(props) {\n  const { firstName, lastName, email, phoneNumber } = props.info;\n  const { handleChange, handleClick, isEditableForm, errors } = props;\n\n  return (\n    <React.Fragment>\n      <Grid item xs={12} sm={6}>\n        <TextField\n          variant='filled'\n          label='First Name'\n          id='first-name'\n          fullWidth\n          error={!!errors.firstName}\n          helperText={errors.firstName}\n          value={firstName}\n          onChange={(e) => handleChange('firstName', e.target.value)}\n        />\n      </Grid>\n      <Grid item xs={12} sm={6}>\n        <TextField\n          variant='filled'\n          label='Last Name'\n          id='last-name'\n          fullWidth\n          error={!!errors.lastName}\n          helperText={errors.lastName}\n          value={lastName}\n          onChange={(e) => handleChange('lastName', e.target.value)}\n        />\n      </Grid>\n      <Grid item xs={12} sm={6}>\n        <TextField\n          variant='filled'\n          label='Email'\n          type='email'\n          id='email'\n          fullWidth\n          error={!!errors.email}\n          helperText={errors.email}\n          value={email}\n          onChange={(e) => handleChange('email', e.target.value)}\n        />\n      </Grid>\n      <Grid item xs={12} sm={6}>\n        <PhoneField\n          variant='filled'\n          label='Phone Number'\n          id='phone-number'\n          fullWidth\n          defaultCountry={'us'}\n          error={!!errors.phoneNumber}\n          helperText={errors.phoneNumber}\n          value={phoneNumber}\n          onChange={(value) => handleChange('phoneNumber', value)}\n        />\n      </Grid>\n      {!isEditableForm && (\n        <Grid item xs={12} sm={6}>\n          <Box display='grid' gridTemplateColumns='90px'>\n            <Button\n              variant='contained'\n              color='primary'\n              onClick={handleClick}\n              disabled={!errors.isValid}\n            >\n              Save\n            </Button>\n          </Box>\n        </Grid>\n      )}\n    </React.Fragment>\n  );\n}\n","import PersonalInformationView from './PersonalInformationView';\n\nexport default PersonalInformationView;\n","import React from 'react';\nimport { Divider, Grid, Typography, Button, Box } from '@material-ui/core';\n\nexport default function PersonalInformationView(props) {\n  const { firstName, lastName, email, phoneNumber } = props.info;\n  const { handleClick } = props;\n\n  return (\n    <React.Fragment>\n      <Grid item xs={12}>\n        <Box\n          display='grid'\n          justifyContent='space-between'\n          gridTemplateColumns='1fr 90px'\n          alignItems='start'\n        >\n          <Box>\n            <Typography variant='h6'>{firstName + ' ' + lastName}</Typography>\n\n            <Typography variant='subtitle1'>{email}</Typography>\n            <Typography variant='subtitle1'>{phoneNumber}</Typography>\n          </Box>\n          <Box display='grid'>\n            <Button variant='contained' color='primary' onClick={handleClick}>\n              Edit\n            </Button>\n          </Box>\n        </Box>\n        <Box mt={2.5} width='50%'>\n          <Divider />\n        </Box>\n      </Grid>\n    </React.Fragment>\n  );\n}\n","import PersonalInformationSection from './PersonalInformationSection';\n\nexport default PersonalInformationSection;\n","import React, { useState, useEffect } from 'react';\nimport { Box, Typography, Divider, Grid } from '@material-ui/core';\nimport PersonalInformationInput from './PersonalInformationInput';\nimport PersonalInformationView from './PersonalInformationView';\n\nexport default function PersonalInformationSection(props) {\n  const [isEditable, setIsEditable] = useState(true);\n\n  const handleEdit = () => {\n    setIsEditable((state) => !state);\n  };\n\n  const { isEditableForm, errors, personalInfo, handleChange } = props;\n\n  useEffect(() => {\n    if (!isEditableForm) {\n      setIsEditable(false);\n    }\n  }, [isEditableForm]);\n\n  return (\n    <Box component='section'>\n      <Typography variant='h5' component='h3'>\n        Personal Information\n      </Typography>\n      <Divider />\n      <Box mt={2.5}>\n        <Grid container spacing={2}>\n          {isEditable ? (\n            <PersonalInformationInput\n              info={personalInfo}\n              errors={errors}\n              handleChange={handleChange}\n              handleClick={handleEdit}\n              isEditableForm={isEditableForm}\n            />\n          ) : (\n            <PersonalInformationView\n              info={personalInfo}\n              handleClick={handleEdit}\n            />\n          )}\n        </Grid>\n      </Box>\n    </Box>\n  );\n}\n","import EducationInput from './EducationInput';\n\nexport default EducationInput;\n","import React from 'react';\nimport {\n  TextField,\n  FormControlLabel,\n  Switch,\n  Grid,\n  Button,\n  Box\n} from '@material-ui/core';\nimport { KeyboardDatePicker } from '@material-ui/pickers';\n\nexport default function EducationInput(props) {\n  const {\n    qualificationTitle,\n    organization,\n    fromDate,\n    toDate,\n    isOngoing,\n    id\n  } = props.education;\n\n  const {\n    handleChange,\n    isAlone,\n    handleSaveClick,\n    isEditableForm,\n    handleDeleteClick,\n    errors\n  } = props;\n\n  return (\n    <Grid container spacing={2} alignItems='flex-start'>\n      <Grid item xs={12}>\n        <TextField\n          variant='filled'\n          label='Title of qualification awarded'\n          id='title-qualification'\n          fullWidth\n          error={!!errors.qualificationTitle}\n          helperText={errors.qualificationTitle}\n          value={qualificationTitle}\n          onChange={(e) =>\n            handleChange('qualificationTitle', e.target.value, id)\n          }\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <TextField\n          variant='filled'\n          label='Organization providing education and training'\n          id='education-organization'\n          fullWidth\n          error={!!errors.organization}\n          helperText={errors.organization}\n          value={organization}\n          onChange={(e) => handleChange('organization', e.target.value, id)}\n        />\n      </Grid>\n\n      <Grid item xs={12} sm={6} md={5}>\n        <KeyboardDatePicker\n          inputVariant='filled'\n          format='dd/MM/yyyy'\n          label='From'\n          id='edu-from-date'\n          fullWidth\n          placeholder='14/01/1970'\n          disableFuture\n          error={!!errors.fromDate}\n          helperText={errors.fromDate}\n          value={fromDate}\n          onChange={(date) => handleChange('fromDate', date, id)}\n        />\n      </Grid>\n      <Grid item xs={12} sm={6} md={5}>\n        <KeyboardDatePicker\n          inputVariant='filled'\n          format='dd/MM/yyyy'\n          label='To'\n          id='edu-to-date'\n          fullWidth\n          placeholder='14/01/1971'\n          disableFuture\n          error={!!errors.toDate}\n          helperText={errors.toDate}\n          value={toDate}\n          onChange={(date) => handleChange('toDate', date, id)}\n          disabled={isOngoing}\n        />\n      </Grid>\n      <Grid item xs={12} md={2}>\n        <FormControlLabel\n          control={\n            <Switch\n              color='primary'\n              id='edu-to-ongoing-date'\n              checked={isOngoing}\n              onChange={() => handleChange('isOngoing', !isOngoing, id)}\n            />\n          }\n          label='Ongoing'\n        />\n      </Grid>\n      <Grid item xs={12} sm={6}>\n        <Box\n          display='grid'\n          gridTemplateColumns='90px 90px'\n          gridColumnGap='16px'\n        >\n          {!isEditableForm && (\n            <Button\n              variant='contained'\n              color='primary'\n              onClick={handleSaveClick}\n              disabled={!errors.isValid || !errors.areFieldsCompleted}\n            >\n              Save\n            </Button>\n          )}\n          {!isAlone && (\n            <Button\n              variant='contained'\n              color='secondary'\n              onClick={() => handleDeleteClick(id)}\n            >\n              Delete\n            </Button>\n          )}\n        </Box>\n      </Grid>\n    </Grid>\n  );\n}\n","import { format } from 'date-fns';\n\nexport const formatDate = (date) => {\n  if (!date || isNaN(date)) return '';\n  return format(date, 'dd/MM/yyyy');\n};\n","import EducationView from './EducationView';\n\nexport default EducationView;\n","import React from 'react';\nimport { Grid, Typography, Button, Box } from '@material-ui/core';\nimport { formatDate } from '../../../../../../lib/utils';\n\nexport default function EducationView(props) {\n  const {\n    qualificationTitle,\n    organization,\n    fromDate,\n    toDate,\n    isOngoing,\n    id\n  } = props.education;\n\n  const { handleEditClick, handleDeleteClick, isAlone } = props;\n\n  return (\n    <Grid container spacing={2} alignItems='flex-end'>\n      <Grid item xs={12}>\n        <Box\n          display='grid'\n          justifyContent='space-between'\n          gridTemplateColumns='1fr 90px'\n          alignItems='start'\n        >\n          <Box>\n            <Typography variant='h6'>{qualificationTitle}</Typography>\n            <Typography variant='subtitle1'>{organization}</Typography>\n            <Typography variant='subtitle1'>\n              {formatDate(fromDate) +\n                (isOngoing ? ' - ongoing' : ` - ${formatDate(toDate)}`)}\n            </Typography>\n          </Box>\n          <Box display='grid' gridRowGap='16px'>\n            <Button\n              variant='contained'\n              color='primary'\n              onClick={handleEditClick}\n            >\n              Edit\n            </Button>\n            {!isAlone && (\n              <Button\n                variant='contained'\n                color='secondary'\n                onClick={() => handleDeleteClick(id)}\n              >\n                Delete\n              </Button>\n            )}\n          </Box>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n}\n","import EducationItem from './EducationItem';\n\nexport default EducationItem;\n","import React, { useState, useEffect } from 'react';\n\nimport EducationInput from './EducationInput';\nimport EducationView from './EducationView';\n\nexport default function EducationItem(props) {\n  const [isEditable, setIsEditable] = useState(true);\n  const [isNew, setIsNew] = useState(true);\n\n  const handleSave = () => {\n    setIsEditable(false);\n  };\n\n  const handleEdit = () => {\n    setIsEditable(true);\n  };\n\n  const {\n    education,\n    handleChange,\n    isEditableForm,\n    handleDelete,\n    isAlone,\n    errors\n  } = props;\n\n  useEffect(() => {\n    if (isNew) {\n      setIsNew(false);\n      return;\n    }\n\n    if (!isEditableForm) {\n      setIsEditable(false);\n      return;\n    }\n  }, [isEditableForm]);\n\n  return (\n    <React.Fragment>\n      {isEditable ? (\n        <EducationInput\n          education={education}\n          errors={errors}\n          handleChange={handleChange}\n          handleSaveClick={handleSave}\n          handleDeleteClick={handleDelete}\n          isEditableForm={isEditableForm}\n          isAlone={isAlone}\n        />\n      ) : (\n        <EducationView\n          education={education}\n          handleEditClick={handleEdit}\n          handleDeleteClick={handleDelete}\n          isAlone={isAlone}\n        />\n      )}\n    </React.Fragment>\n  );\n}\n","import EducationList from './EducationList';\n\nexport default EducationList;\n","import React from 'react';\n\nimport { Divider, Box, List, ListItem } from '@material-ui/core';\nimport EducationItem from './EducationItem';\n\nexport default function EducationList(props) {\n  const {\n    educations,\n    handleChange,\n    isEditableForm,\n    handleDelete,\n    errorsList\n  } = props;\n\n  return (\n    <List disablePadding>\n      {educations.map((education) => (\n        <ListItem\n          key={education.id}\n          disableGutters\n          style={{ padding: 0, flexDirection: 'column' }}\n        >\n          <Box minWidth='100%'>\n            <EducationItem\n              education={education}\n              errors={errorsList.find((e) => e.id === education.id)}\n              handleChange={handleChange}\n              isEditableForm={isEditableForm}\n              handleDelete={handleDelete}\n              isAlone={educations.length <= 1}\n            />\n            <Box my={2.5} width='50%'>\n              <Divider />\n            </Box>\n          </Box>\n        </ListItem>\n      ))}\n    </List>\n  );\n}\n","import EducationSection from './EducationSection';\n\nexport default EducationSection;\n","import React from 'react';\nimport { Box, Typography, Divider, Button, Grid } from '@material-ui/core';\n\nimport EducationList from './EducationList';\n\nexport default function EducationSection(props) {\n  const {\n    educations,\n    handleChange,\n    isEditableForm,\n    handleAdd,\n    handleDelete,\n    errorsList\n  } = props;\n\n  return (\n    <Box component='section'>\n      <Typography variant='h5' component='h3'>\n        Education and Training\n      </Typography>\n      <Divider />\n      <Box mt={2.5}>\n        <EducationList\n          educations={educations}\n          errorsList={errorsList}\n          handleChange={handleChange}\n          isEditableForm={isEditableForm}\n          handleDelete={handleDelete}\n        />\n        <Grid item xs={12} md={2}>\n          <Button\n            variant='contained'\n            color='primary'\n            size='large'\n            fullWidth\n            onClick={handleAdd}\n          >\n            Add\n          </Button>\n        </Grid>\n      </Box>\n    </Box>\n  );\n}\n","import WorkExperienceInput from './WorkExperienceInput';\n\nexport default WorkExperienceInput;\n","import React from 'react';\nimport {\n  TextField,\n  FormControlLabel,\n  Switch,\n  Grid,\n  Button,\n  Box\n} from '@material-ui/core';\nimport { KeyboardDatePicker } from '@material-ui/pickers';\n\nexport default function WorkExperienceInput(props) {\n  const {\n    occupationTitle,\n    employer,\n    fromDate,\n    toDate,\n    isOngoing,\n    responsibilities,\n    id\n  } = props.workExperience;\n\n  const {\n    handleChange,\n    isAlone,\n    handleSaveClick,\n    isEditableForm,\n    handleDeleteClick,\n    errors\n  } = props;\n\n  return (\n    <Grid container spacing={2} alignItems='flex-start'>\n      <Grid item xs={12}>\n        <TextField\n          variant='filled'\n          label='Title of the occupation'\n          id='title-occupation'\n          fullWidth\n          error={!!errors.occupationTitle}\n          helperText={errors.occupationTitle}\n          value={occupationTitle}\n          onChange={(e) => handleChange('occupationTitle', e.target.value, id)}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <TextField\n          variant='filled'\n          label='Employer'\n          id='employer'\n          fullWidth\n          error={!!errors.employer}\n          helperText={errors.employer}\n          value={employer}\n          onChange={(e) => handleChange('employer', e.target.value, id)}\n        />\n      </Grid>\n      <Grid item xs={12} sm={6} md={5}>\n        <KeyboardDatePicker\n          inputVariant='filled'\n          format='dd/MM/yyyy'\n          label='From'\n          id='work-from-date'\n          fullWidth\n          placeholder='14/01/1970'\n          disableFuture\n          error={!!errors.fromDate}\n          helperText={errors.fromDate}\n          value={fromDate}\n          onChange={(date) => handleChange('fromDate', date, id)}\n        />\n      </Grid>\n      <Grid item xs={12} sm={6} md={5}>\n        <KeyboardDatePicker\n          inputVariant='filled'\n          format='dd/MM/yyyy'\n          label='To'\n          id='work-to-date'\n          fullWidth\n          placeholder='14/01/1971'\n          disableFuture\n          error={!!errors.toDate}\n          helperText={errors.toDate}\n          value={toDate}\n          onChange={(date) => handleChange('toDate', date, id)}\n          disabled={isOngoing}\n        />\n      </Grid>\n      <Grid item xs={12} md={2}>\n        <FormControlLabel\n          control={\n            <Switch\n              color='primary'\n              id='work-to-ongoing-date'\n              checked={isOngoing}\n              onChange={() => handleChange('isOngoing', !isOngoing, id)}\n            />\n          }\n          label='Ongoing'\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <TextField\n          variant='filled'\n          label='Main activities and responsibilities'\n          id='activities'\n          rows='4'\n          multiline\n          fullWidth\n          value={responsibilities}\n          onChange={(e) => handleChange('responsibilities', e.target.value, id)}\n        />\n      </Grid>\n      <Grid item xs={12} sm={6}>\n        <Box\n          display='grid'\n          gridTemplateColumns='90px 90px'\n          gridColumnGap='16px'\n        >\n          {!isEditableForm && (\n            <Button\n              variant='contained'\n              color='primary'\n              onClick={handleSaveClick}\n              disabled={!errors.isValid || !errors.areFieldsCompleted}\n            >\n              Save\n            </Button>\n          )}\n          {!isAlone && (\n            <Button\n              variant='contained'\n              color='secondary'\n              onClick={() => handleDeleteClick(id)}\n            >\n              Delete\n            </Button>\n          )}\n        </Box>\n      </Grid>\n    </Grid>\n  );\n}\n","import WorkExperienceView from './WorkExperienceView';\n\nexport default WorkExperienceView;\n","import React from 'react';\nimport { Grid, Typography, Button, Box } from '@material-ui/core';\nimport { formatDate } from '../../../../../../lib/utils';\n\nexport default function EducationView(props) {\n  const {\n    occupationTitle,\n    employer,\n    fromDate,\n    toDate,\n    isOngoing,\n    responsibilities,\n    id\n  } = props.workExperience;\n\n  const { handleEditClick, handleDeleteClick, isAlone } = props;\n\n  return (\n    <Grid container spacing={2} alignItems='flex-end'>\n      <Grid item xs={12}>\n        <Box\n          display='grid'\n          justifyContent='space-between'\n          gridTemplateColumns='1fr 90px'\n          alignItems='start'\n        >\n          <Box>\n            <Typography variant='h6'>{occupationTitle}</Typography>\n            <Typography variant='subtitle1'>{employer}</Typography>\n            <Typography variant='subtitle1'>{responsibilities}</Typography>\n            <Typography variant='subtitle1'>\n              {formatDate(fromDate) +\n                (isOngoing ? ' - ongoing' : ` - ${formatDate(toDate)}`)}\n            </Typography>\n          </Box>\n          <Box display='grid' gridRowGap='16px'>\n            <Button\n              variant='contained'\n              color='primary'\n              onClick={handleEditClick}\n            >\n              Edit\n            </Button>\n            {!isAlone && (\n              <Button\n                variant='contained'\n                color='secondary'\n                onClick={() => handleDeleteClick(id)}\n              >\n                Delete\n              </Button>\n            )}\n          </Box>\n        </Box>\n      </Grid>\n    </Grid>\n  );\n}\n","import WorkExperienceItem from './WorkExperienceItem';\n\nexport default WorkExperienceItem;\n","import React, { useState, useEffect } from 'react';\n\nimport WorkExperienceInput from './WorkExperienceInput';\nimport WorkExperienceView from './WorkExperienceView';\n\nexport default function WorkExperienceItem(props) {\n  const [isEditable, setIsEditable] = useState(true);\n  const [isNew, setIsNew] = useState(true);\n\n  const handleSave = () => {\n    setIsEditable(false);\n  };\n\n  const handleEdit = () => {\n    setIsEditable(true);\n  };\n\n  const {\n    workExperience,\n    handleChange,\n    isEditableForm,\n    handleDelete,\n    isAlone,\n    errors\n  } = props;\n\n  useEffect(() => {\n    if (isNew) {\n      setIsNew(false);\n      return;\n    }\n\n    if (!isEditableForm) {\n      setIsEditable(false);\n      return;\n    }\n  }, [isEditableForm]);\n\n  return (\n    <React.Fragment>\n      {isEditable ? (\n        <WorkExperienceInput\n          workExperience={workExperience}\n          errors={errors}\n          handleChange={handleChange}\n          handleSaveClick={handleSave}\n          handleDeleteClick={handleDelete}\n          isEditableForm={isEditableForm}\n          isAlone={isAlone}\n        />\n      ) : (\n        <WorkExperienceView\n          workExperience={workExperience}\n          handleEditClick={handleEdit}\n          handleDeleteClick={handleDelete}\n          isAlone={isAlone}\n        />\n      )}\n    </React.Fragment>\n  );\n}\n","import WorkExperienceList from './WorkExperienceList';\n\nexport default WorkExperienceList;\n","import React from 'react';\n\nimport { Divider, Box, List, ListItem } from '@material-ui/core';\nimport WorkExperienceItem from './WorkExperienceItem';\n\nexport default function WorkExperienceList(props) {\n  const {\n    workExperiences,\n    handleChange,\n    isEditableForm,\n    handleDelete,\n    errorsList\n  } = props;\n\n  return (\n    <List disablePadding>\n      {workExperiences.map((workExperience) => (\n        <ListItem\n          key={workExperience.id}\n          disableGutters\n          style={{ padding: 0, flexDirection: 'column' }}\n        >\n          <Box minWidth='100%'>\n            <WorkExperienceItem\n              workExperience={workExperience}\n              errors={errorsList.find((e) => e.id === workExperience.id)}\n              handleChange={handleChange}\n              isEditableForm={isEditableForm}\n              handleDelete={handleDelete}\n              isAlone={workExperiences.length <= 1}\n            />\n            <Box my={2.5} width='50%'>\n              <Divider />\n            </Box>\n          </Box>\n        </ListItem>\n      ))}\n    </List>\n  );\n}\n","import WorkExperienceSection from './WorkExperienceSection';\n\nexport default WorkExperienceSection;\n","import React from 'react';\nimport { Box, Typography, Divider, Grid, Button } from '@material-ui/core';\n\nimport WorkExperienceList from './WorkExperienceList';\n\nexport default function WorkExperienceSection(props) {\n  const {\n    workExperiences,\n    handleChange,\n    isEditableForm,\n    handleAdd,\n    handleDelete,\n    errorsList\n  } = props;\n\n  return (\n    <Box component='section'>\n      <Typography variant='h5' component='h3'>\n        Work Experience\n      </Typography>\n      <Divider />\n      <Box mt={2.5}>\n        <WorkExperienceList\n          workExperiences={workExperiences}\n          errorsList={errorsList}\n          handleChange={handleChange}\n          isEditableForm={isEditableForm}\n          handleDelete={handleDelete}\n        />\n        <Grid item xs={12} md={2}>\n          <Button\n            variant='contained'\n            color='primary'\n            size='large'\n            fullWidth\n            onClick={handleAdd}\n          >\n            Add\n          </Button>\n        </Grid>\n      </Box>\n    </Box>\n  );\n}\n","import CreateCVSection from './CreateCVSection';\n\nexport default CreateCVSection;\n","import React from 'react';\nimport { Box, Typography, Divider, Button, Grid } from '@material-ui/core';\n\nexport default function CreateCVSection(props) {\n  return (\n    <Box component='section'>\n      <Typography variant='h5' component='h3'>\n        Create the CV\n      </Typography>\n      <Divider />\n      <Box mt={2.5}>\n        <Grid container>\n          <Grid item xs={12} md={2}>\n            <Button variant='contained' size='large' fullWidth type='submit'>\n              {props.isEditableForm ? 'Preview' : 'Create PDF'}\n            </Button>\n          </Grid>\n          <Grid item xs={12}>\n            <Typography variant='subtitle1' color='textSecondary'>\n              Complete all fields and continue!\n            </Typography>\n          </Grid>\n        </Grid>\n      </Box>\n    </Box>\n  );\n}\n","const validateName = (value) => {\n  if (!value) return 'This field is required';\n  if (value.length > 50) return 'Maximum Length is 50';\n\n  return '';\n};\n\nconst validateEmail = (value) => {\n  if (!value) return 'This field is required';\n  if (value.length > 50) return 'Maximum Length is 50';\n  if (!value.match(/\\S+@\\S+\\.\\S+/)) return 'Wrong email format';\n\n  return '';\n};\n\nconst validatePhone = (value) => {\n  if (value.match(/^\\+?$/)) return 'This field is required';\n\n  return '';\n};\n\nconst validateStartDate = (start, end) => {\n  if (!start) return 'This field is required';\n  if (isNaN(start)) return 'Fill the correct date';\n  if (start > new Date()) return 'Is a future date';\n  if (!end || isNaN(end)) return '';\n  if (start.getTime() > end.getTime())\n    return 'Start date cannot be smaller than end date';\n\n  return '';\n};\n\nconst validateEndDate = (end, start) => {\n  if (!end) return 'This field is required';\n  if (isNaN(end)) return 'Fill the correct date';\n  if (end > new Date()) return 'Is a future date';\n  if (!start || isNaN(start)) return '';\n  if (start.getTime() > end.getTime())\n    return 'Start date cannot be smaller than end date';\n\n  return '';\n};\n\nconst hasErrors = (errors) => {\n  if (errors.find((e) => e !== '')) {\n    return true;\n  }\n\n  return false;\n};\n\nconst isPersonalInformationValid = (errors) => {\n  const { firstName, lastName, email, phoneNumber } = errors;\n\n  return !hasErrors(Object.values({ firstName, lastName, email, phoneNumber }));\n};\n\nconst isEducationValid = (errors) => {\n  const { qualificationTitle, organization, fromDate, toDate } = errors;\n\n  return !hasErrors(\n    Object.values({ qualificationTitle, organization, fromDate, toDate })\n  );\n};\n\nconst isWorkExperienceValid = (errors) => {\n  const { occupationTitle, employer, fromDate, toDate } = errors;\n\n  return !hasErrors(\n    Object.values({ occupationTitle, employer, fromDate, toDate })\n  );\n};\n\nconst validatePersonalInformation = (personalInformation) => {\n  const { firstName, lastName, email, phoneNumber } = personalInformation;\n\n  const errors = {\n    firstName: validateName(firstName),\n    lastName: validateName(lastName),\n    email: validateEmail(email),\n    phoneNumber: validatePhone(phoneNumber)\n  };\n\n  return {\n    isValid: !hasErrors(Object.values(errors)),\n    ...errors\n  };\n};\n\nconst validateEducations = (educations) => {\n  const errorsList = educations.map((education) => {\n    const {\n      qualificationTitle,\n      organization,\n      fromDate,\n      toDate,\n      isOngoing,\n      id\n    } = education;\n    const errors = {\n      qualificationTitle: validateName(qualificationTitle),\n      organization: validateName(organization),\n      fromDate: validateStartDate(fromDate, !isOngoing && toDate),\n      toDate: isOngoing ? '' : validateEndDate(toDate, fromDate)\n    };\n\n    return {\n      id,\n      isValid: !hasErrors(Object.values(errors)),\n      ...errors\n    };\n  });\n\n  return errorsList;\n};\n\nconst validateWorkExperiences = (workExperiences) => {\n  const errorsList = workExperiences.map((workExperience) => {\n    const {\n      occupationTitle,\n      employer,\n      fromDate,\n      toDate,\n      isOngoing,\n      id\n    } = workExperience;\n\n    const errors = {\n      occupationTitle: validateName(occupationTitle),\n      employer: validateName(employer),\n      fromDate: validateStartDate(fromDate, !isOngoing && toDate),\n      toDate: isOngoing ? '' : validateEndDate(toDate, fromDate)\n    };\n\n    return {\n      id,\n      isValid: !hasErrors(Object.values(errors)),\n      ...errors\n    };\n  });\n\n  return errorsList;\n};\n\nconst areEducationCompleted = (education) => {\n  const {\n    qualificationTitle,\n    organization,\n    fromDate,\n    toDate,\n    isOngoing\n  } = education;\n\n  return (\n    !!qualificationTitle &&\n    !!organization &&\n    !!fromDate &&\n    (isOngoing || !!toDate)\n  );\n};\n\nconst areWorkExperienceCompleted = (workExperience) => {\n  const {\n    occupationTitle,\n    employer,\n    fromDate,\n    toDate,\n    isOngoing\n  } = workExperience;\n\n  return (\n    !!occupationTitle && !!employer && !!fromDate && (isOngoing || !!toDate)\n  );\n};\n\nconst validateForm = (personalInfo, educations, workExperiences) => {\n  const sectionsErrors = {\n    personalInfo: validatePersonalInformation(personalInfo),\n    educations: validateEducations(educations),\n    workExperiences: validateWorkExperiences(workExperiences)\n  };\n\n  const foundInvalidEducation = sectionsErrors.educations.find(\n    (ed) => !ed.isValid\n  );\n  const areEducationsValid = foundInvalidEducation ? false : true;\n\n  const foundInvalidWorkExperience = sectionsErrors.workExperiences.find(\n    (w) => !w.isValid\n  );\n\n  const areWorkExperiencesValid = foundInvalidWorkExperience ? false : true;\n\n  return [\n    sectionsErrors.personalInfo.isValid &&\n      areEducationsValid &&\n      areWorkExperiencesValid,\n    sectionsErrors\n  ];\n};\n\nexport default {\n  validateName,\n  validateEmail,\n  validatePhone,\n  validateStartDate,\n  validateEndDate,\n  hasErrors,\n  validatePersonalInformation,\n  validateEducations,\n  validateWorkExperiences,\n  isPersonalInformationValid,\n  isEducationValid,\n  isWorkExperienceValid,\n  areEducationCompleted,\n  areWorkExperienceCompleted,\n  validateForm\n};\n","import React, { useState } from 'react';\nimport { Grid } from '@material-ui/core';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport PersonalInformationSection from './PersonalInformationSection';\nimport EducationSection from './EducationSection';\nimport WorkExperienceSection from './WorkExperienceSection';\nimport CreateCVSection from './CreateCVSection';\n\nimport validator from '../../lib/validator';\n\nconst initEducationID = uuidv4();\nconst initWorkExperienceID = uuidv4();\n\nexport default function CVForm(props) {\n  const [personalInfo, setPersonalInfo] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    phoneNumber: ''\n  });\n  const [educations, setEducations] = useState([\n    {\n      id: initEducationID,\n      qualificationTitle: '',\n      organization: '',\n      fromDate: null,\n      toDate: null,\n      isOngoing: false\n    }\n  ]);\n  const [workExperiences, setWorkExperiences] = useState([\n    {\n      id: initWorkExperienceID,\n      occupationTitle: '',\n      employer: '',\n      fromDate: null,\n      toDate: null,\n      isOngoing: false,\n      responsibilities: ''\n    }\n  ]);\n  const [sectionsErrors, setSectionsErrors] = useState({\n    personalInfo: {\n      isValid: false,\n      firstName: '',\n      lastName: '',\n      email: '',\n      phoneNumber: ''\n    },\n    educations: [\n      {\n        isValid: false,\n        id: initEducationID,\n        qualificationTitle: '',\n        organization: '',\n        fromDate: '',\n        toDate: '',\n        areFieldsCompleted: false\n      }\n    ],\n    workExperiences: [\n      {\n        isValid: false,\n        id: initWorkExperienceID,\n        occupationTitle: '',\n        employer: '',\n        fromDate: '',\n        toDate: '',\n        responsibilities: '',\n        areFieldsCompleted: false\n      }\n    ]\n  });\n  const [isEditableForm, setIsEditableForm] = useState(true);\n  const [isPreview, setIsPreview] = useState(false);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (!isPreview) {\n      const [isValid, sectionsErrors] = validator.validateForm(\n        personalInfo,\n        educations,\n        workExperiences\n      );\n\n      if (isValid) {\n        window.scrollTo(0, 0);\n\n        setIsEditableForm(false);\n        setIsPreview(true);\n      } else {\n        setSectionsErrors(sectionsErrors);\n      }\n    } else {\n      const [isValid, sectionsErrors] = validator.validateForm(\n        personalInfo,\n        educations,\n        workExperiences\n      );\n\n      if (isValid) {\n        props.onCVCreate({ personalInfo, educations, workExperiences });\n      } else {\n        setSectionsErrors(sectionsErrors);\n      }\n    }\n  };\n\n  const handlePersonalInfoChange = (field, value) => {\n    setPersonalInfo((prevState) => {\n      const personalInfo = { ...prevState };\n      const { personalInfo: errors } = { ...sectionsErrors };\n\n      switch (field) {\n        case 'firstName': {\n          personalInfo.firstName = value;\n          errors.firstName = validator.validateName(value);\n          break;\n        }\n        case 'lastName': {\n          personalInfo.lastName = value;\n          errors.lastName = validator.validateName(value);\n          break;\n        }\n        case 'email': {\n          personalInfo.email = value;\n          errors.email = validator.validateEmail(value);\n          break;\n        }\n        case 'phoneNumber': {\n          personalInfo.phoneNumber = value;\n          errors.phoneNumber = validator.validatePhone(value);\n          break;\n        }\n      }\n\n      errors.isValid = validator.isPersonalInformationValid(errors);\n      setSectionsErrors((prevState) => ({\n        ...prevState,\n        personalInfo: errors\n      }));\n\n      return personalInfo;\n    });\n  };\n\n  const handleAddEducation = () => {\n    const id = uuidv4();\n\n    setEducations((prevState) => {\n      const educations = prevState.map((e) => ({ ...e }));\n\n      educations.push({\n        qualificationTitle: '',\n        organization: '',\n        fromDate: null,\n        toDate: null,\n        isOngoing: false,\n        id\n      });\n\n      return educations;\n    });\n\n    setSectionsErrors((prevState) => {\n      const sectionsErrors = {\n        ...prevState,\n        educations: prevState.educations.map((e) => ({ ...e }))\n      };\n\n      sectionsErrors.educations.push({\n        isValid: false,\n        id,\n        qualificationTitle: '',\n        organization: '',\n        fromDate: '',\n        toDate: '',\n        areFieldsCompleted: false\n      });\n\n      return sectionsErrors;\n    });\n  };\n\n  const handleDeleteEducation = (id) => {\n    setEducations((prevState) => prevState.filter((e) => e.id !== id));\n\n    setSectionsErrors((prevState) => ({\n      ...prevState,\n      educations: prevState.educations.filter((e) => e.id !== id)\n    }));\n  };\n\n  const handleEducationChange = (field, value, id) => {\n    setEducations((prevState) => {\n      const educations = prevState.map((e) => ({ ...e }));\n      const education = educations.find((edu) => edu.id === id);\n      const educationsErrors = sectionsErrors.educations.map((e) => ({ ...e }));\n      const errors = educationsErrors.find((edu) => edu.id === id);\n\n      switch (field) {\n        case 'qualificationTitle': {\n          education.qualificationTitle = value;\n          errors.qualificationTitle = validator.validateName(value);\n          break;\n        }\n        case 'organization': {\n          education.organization = value;\n          errors.organization = validator.validateName(value);\n          break;\n        }\n        case 'fromDate': {\n          education.fromDate = value;\n          errors.fromDate = validator.validateStartDate(\n            value,\n            !education.isOngoing && education.toDate\n          );\n\n          if (!errors.fromDate && errors.toDate)\n            errors.toDate = validator.validateEndDate(education.toDate, value);\n          break;\n        }\n        case 'toDate': {\n          education.toDate = value;\n          errors.toDate = education.isOngoing\n            ? ''\n            : validator.validateEndDate(value, education.fromDate);\n\n          if (!errors.toDate && errors.fromDate)\n            errors.fromDate = validator.validateStartDate(\n              education.fromDate,\n              value\n            );\n          break;\n        }\n        case 'isOngoing': {\n          education.isOngoing = value;\n          if (value) {\n            errors.fromDate = validator.validateStartDate(\n              education.fromDate,\n              null\n            );\n            errors.toDate = '';\n          } else {\n            errors.toDate = validator.validateEndDate(\n              education.toDate,\n              education.fromDate\n            );\n          }\n          break;\n        }\n      }\n\n      errors.isValid = validator.isEducationValid(errors);\n      errors.areFieldsCompleted = validator.areEducationCompleted(education);\n\n      setSectionsErrors((prevState) => {\n        return { ...prevState, educations: educationsErrors };\n      });\n\n      return educations;\n    });\n  };\n\n  const handleAddWorkExperience = () => {\n    const id = uuidv4();\n\n    setWorkExperiences((prevState) => {\n      const workExperiences = prevState.map((w) => ({ ...w }));\n\n      workExperiences.push({\n        occupationTitle: '',\n        employer: '',\n        fromDate: null,\n        toDate: null,\n        isOngoing: false,\n        responsibilities: '',\n        id\n      });\n\n      return workExperiences;\n    });\n\n    setSectionsErrors((prevState) => {\n      const sectionsErrors = {\n        ...prevState,\n        workExperiences: prevState.workExperiences.map((w) => ({ ...w }))\n      };\n\n      sectionsErrors.workExperiences.push({\n        isValid: false,\n        id,\n        occupationTitle: '',\n        employer: '',\n        fromDate: '',\n        toDate: '',\n        responsibilities: '',\n        areFieldsCompleted: false\n      });\n\n      return sectionsErrors;\n    });\n  };\n\n  const handleDeleteWorkExperience = (id) => {\n    setWorkExperiences((prevState) => prevState.filter((w) => w.id !== id));\n\n    setSectionsErrors((prevState) => ({\n      ...prevState,\n      workExperiences: prevState.workExperiences.filter((w) => w.id !== id)\n    }));\n  };\n\n  const handleWorkExperienceChange = (field, value, id) => {\n    setWorkExperiences((prevState) => {\n      const workExperiences = prevState.map((w) => ({ ...w }));\n      const workExperience = workExperiences.find((w) => w.id === id);\n      const workExperiencesErrors = sectionsErrors.workExperiences.map((w) => ({\n        ...w\n      }));\n      const errors = workExperiencesErrors.find((w) => w.id === id);\n\n      switch (field) {\n        case 'occupationTitle': {\n          workExperience.occupationTitle = value;\n          errors.occupationTitle = validator.validateName(value);\n          break;\n        }\n        case 'employer': {\n          workExperience.employer = value;\n          errors.employer = validator.validateName(value);\n          break;\n        }\n        case 'fromDate': {\n          workExperience.fromDate = value;\n          errors.fromDate = validator.validateStartDate(\n            value,\n            !workExperience.isOngoing && workExperience.toDate\n          );\n\n          if (!errors.fromDate && errors.toDate)\n            errors.toDate = validator.validateEndDate(\n              workExperience.toDate,\n              value\n            );\n          break;\n        }\n        case 'toDate': {\n          workExperience.toDate = value;\n          errors.toDate = workExperience.isOngoing\n            ? ''\n            : validator.validateEndDate(value, workExperience.fromDate);\n\n          if (!errors.toDate && errors.fromDate)\n            errors.fromDate = validator.validateStartDate(\n              workExperience.fromDate,\n              value\n            );\n          break;\n        }\n        case 'isOngoing': {\n          workExperience.isOngoing = value;\n          if (value) {\n            errors.fromDate = validator.validateStartDate(\n              workExperience.fromDate,\n              null\n            );\n            errors.toDate = '';\n          } else {\n            errors.toDate = validator.validateEndDate(\n              workExperience.toDate,\n              workExperience.fromDate\n            );\n          }\n          break;\n        }\n        case 'responsibilities': {\n          workExperience.responsibilities = value;\n          break;\n        }\n      }\n\n      errors.isValid = validator.isWorkExperienceValid(errors);\n      errors.areFieldsCompleted = validator.areWorkExperienceCompleted(\n        workExperience\n      );\n\n      setSectionsErrors((prevState) => {\n        return { ...prevState, workExperiences: workExperiencesErrors };\n      });\n\n      return workExperiences;\n    });\n  };\n\n  return (\n    <Grid container component='form' spacing={3} onSubmit={handleSubmit}>\n      {/* Personal Information */}\n      <Grid item xs={12}>\n        <PersonalInformationSection\n          personalInfo={personalInfo}\n          errors={sectionsErrors.personalInfo}\n          handleChange={handlePersonalInfoChange}\n          isEditableForm={isEditableForm}\n        />\n      </Grid>\n      {/* Education and Training*/}\n      <Grid item xs={12}>\n        <EducationSection\n          educations={educations}\n          errorsList={sectionsErrors.educations}\n          handleChange={handleEducationChange}\n          handleAdd={handleAddEducation}\n          handleDelete={handleDeleteEducation}\n          isEditableForm={isEditableForm}\n        />\n      </Grid>\n      {/* Work Experience */}\n      <Grid item xs={12}>\n        <WorkExperienceSection\n          workExperiences={workExperiences}\n          errorsList={sectionsErrors.workExperiences}\n          handleChange={handleWorkExperienceChange}\n          handleAdd={handleAddWorkExperience}\n          handleDelete={handleDeleteWorkExperience}\n          isEditableForm={isEditableForm}\n        />\n      </Grid>\n      {/* Create the CV */}\n      <Grid item xs={12}>\n        <CreateCVSection isEditableForm={isEditableForm} />\n      </Grid>\n    </Grid>\n  );\n}\n","import CVForm from './CVForm';\n\nexport default CVForm;\n","import React from 'react';\nimport { Box, CssBaseline, Container } from '@material-ui/core';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n\nimport CVFactory from './lib/cvPDF';\n\nimport AppHeader from './components/AppHeader';\nimport CVForm from './components/CVForm';\n\nexport default function App() {\n  const onCVCreate = ({ personalInfo, educations, workExperiences }) => {\n    const cv = CVFactory();\n    cv.addPersonalInfo(personalInfo);\n    cv.addEducations(educations);\n    cv.addWorkExperiences(workExperiences);\n\n    cv.saveFile('my-cv.pdf');\n  };\n\n  const darkTheme = createMuiTheme({\n    palette: {\n      type: 'dark'\n    }\n  });\n\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <CssBaseline />\n        <AppHeader />\n        <Container>\n          <Box my={14} component='main'>\n            <CVForm onCVCreate={onCVCreate} />\n          </Box>\n        </Container>\n      </MuiPickersUtilsProvider>\n    </ThemeProvider>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}