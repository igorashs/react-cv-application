{"version":3,"sources":["lib/cvPDF.js","components/AppHeader/index.js","components/AppHeader/AppHeader.js","components/CVForm/PersonalInformationSection/PersonalInformationInput/index.js","components/CVForm/PersonalInformationSection/PersonalInformationInput/PersonalInformationInput.js","components/CVForm/PersonalInformationSection/PersonalInformationView/index.js","components/CVForm/PersonalInformationSection/PersonalInformationView/PersonalInformationView.js","components/CVForm/PersonalInformationSection/index.js","components/CVForm/PersonalInformationSection/PersonalInformationSection.js","components/CVForm/EducationSection/EducationList/EducationItem/EducationInput/index.js","components/CVForm/EducationSection/EducationList/EducationItem/EducationInput/EducationInput.js","components/CVForm/EducationSection/EducationList/EducationItem/EducationView/index.js","components/CVForm/EducationSection/EducationList/EducationItem/EducationView/EducationView.js","components/CVForm/EducationSection/EducationList/EducationItem/index.js","components/CVForm/EducationSection/EducationList/EducationItem/EducationItem.js","components/CVForm/EducationSection/EducationList/index.js","components/CVForm/EducationSection/EducationList/EducationList.js","components/CVForm/EducationSection/index.js","components/CVForm/EducationSection/EducationSection.js","components/CVForm/WorkExperienceSection/WorkExperienceList/WorkExperienceItem/WorkExperienceInput/index.js","components/CVForm/WorkExperienceSection/WorkExperienceList/WorkExperienceItem/WorkExperienceInput/WorkExperienceInput.js","components/CVForm/WorkExperienceSection/WorkExperienceList/WorkExperienceItem/WorkExperienceView/index.js","components/CVForm/WorkExperienceSection/WorkExperienceList/WorkExperienceItem/WorkExperienceView/WorkExperienceView.js","components/CVForm/WorkExperienceSection/WorkExperienceList/WorkExperienceItem/index.js","components/CVForm/WorkExperienceSection/WorkExperienceList/WorkExperienceItem/WorkExperienceItem.js","components/CVForm/WorkExperienceSection/WorkExperienceList/index.js","components/CVForm/WorkExperienceSection/WorkExperienceList/WorkExperienceList.js","components/CVForm/WorkExperienceSection/index.js","components/CVForm/WorkExperienceSection/WorkExperienceSection.js","components/CVForm/CreateCVSection/index.js","components/CVForm/CreateCVSection/CreateCVSection.js","lib/validator.js","components/CVForm/index.js","components/CVForm/CVForm.js","App.js","index.js"],"names":["CVFactory","doc","jsPDF","curY","addY","y","addPersonalInfo","personalInfo","setFont","setFontSize","text","line","firstName","length","lastName","email","phoneNumber","addEducations","educations","forEach","edu","qualificationTitle","organization","format","fromDate","isOngoing","toDate","addWorkExperiences","workExperiences","work","occupationTitle","employer","responsibilities","trim","split","l","subLines","push","substring","saveFile","title","save","AppHeader","AppBar","Box","p","Typography","variant","component","React","Component","PersonalInformationInput","this","props","info","handleChange","handleClick","isEditable","errors","Fragment","Grid","item","xs","sm","TextField","label","id","fullWidth","error","helperText","value","onChange","e","target","type","defaultCountry","display","gridTemplateColumns","Button","color","onClick","disabled","isValid","PersonalInformationView","justifyContent","alignItems","mt","width","Divider","PersonalInformationSection","handleEdit","setState","curState","state","nextProp","nextState","isEditableForm","container","spacing","EducationInput","education","isAlone","handleDeleteClick","md","inputVariant","placeholder","disableFuture","date","FormControlLabel","control","Switch","checked","areFieldsCompleted","EducationView","handleEditClick","gridRowGap","EducationItem","prevState","handleDelete","EducationList","errorsList","errorList","List","disablePadding","map","ListItem","key","disableGutters","style","padding","flexDirection","minWidth","find","my","EducationSection","handleAdd","size","WorkExperienceInput","workExperience","rows","multiline","WorkExperienceView","WorkExperienceItem","WorkExperienceList","WorkExperienceSection","CreateCVSection","PureComponent","validateName","validateEmail","match","validatePhone","validateStartDate","start","end","isNaN","Date","getTime","validateEndDate","hasErrors","validatePersonalInformation","personalInformation","Object","values","validateEducations","validateWorkExperiences","sectionsErrors","areEducationsValid","ed","areWorkExperiencesValid","w","CVForm","handleSubmit","preventDefault","isPreview","validator","onCVCreate","window","scrollTo","handlePersonalInfoChange","field","handleAddEducation","uuidv4","handleDeleteEducation","filter","handleEducationChange","handleAddWorkExperience","handleDeleteWorkExperience","handleWorkExperienceChange","initEducationID","initWorkExperienceID","onSubmit","App","cv","darkTheme","createMuiTheme","palette","ThemeProvider","theme","utils","DateFnsUtils","CssBaseline","Container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0f0f8f2.chunk.js","sourcesContent":["import { jsPDF } from 'jspdf';\nimport { format } from 'date-fns';\n\n// Y Position\nconst SEPARATOR = 6;\nconst HEADING = 10;\nconst SUB_HEADING = 10;\nconst DETAIL = 8;\nconst SMALL_SEPARATOR = 4;\n\nconst CVFactory = () => {\n  const doc = new jsPDF();\n\n  // initial position\n  let curX = 10;\n  let curY = 4;\n\n  const addY = (y) => {\n    curY += y;\n  };\n\n  return {\n    addPersonalInfo: (personalInfo) => {\n      // Heading\n      doc.setFont('Helvetica', 'bold');\n      doc.setFontSize(20);\n      addY(HEADING);\n      doc.text('Personal Info', curX, curY);\n\n      // separator\n      addY(SEPARATOR);\n      doc.line(curX, curY, 160, curY, 'F');\n\n      // subHeading\n      doc.setFontSize(16);\n      addY(SUB_HEADING);\n      if (personalInfo.firstName.length + personalInfo.lastName.length > 60) {\n        doc.text(personalInfo.firstName, curX, curY);\n        addY(SUB_HEADING);\n        doc.text(personalInfo.lastName, curX, curY);\n      } else {\n        doc.text(\n          `${personalInfo.firstName} ${personalInfo.lastName}`,\n          curX,\n          curY\n        );\n      }\n\n      // details\n      doc.setFont('Helvetica', 'normal');\n      doc.setFontSize(14);\n      addY(DETAIL);\n      doc.text(personalInfo.email, curX, curY);\n      addY(DETAIL);\n      doc.text(personalInfo.phoneNumber, curX, curY);\n\n      // small separator\n      addY(SMALL_SEPARATOR);\n      doc.line(curX, curY, 100, curY, 'F');\n    },\n    addEducations: (educations) => {\n      // Heading\n      doc.setFont('Helvetica', 'bold');\n      doc.setFontSize(20);\n      addY(HEADING);\n      doc.text('Education and training', curX, curY);\n\n      // separator\n      addY(SEPARATOR);\n      doc.line(curX, curY, 160, curY, 'F');\n\n      educations.forEach((edu) => {\n        // subHeading\n        doc.setFont('Helvetica', 'bold');\n        doc.setFontSize(16);\n        addY(SUB_HEADING);\n        doc.text(edu.qualificationTitle, curX, curY);\n\n        //details\n        doc.setFont('Helvetica', 'normal');\n        doc.setFontSize(14);\n        addY(DETAIL);\n        doc.text(edu.organization, curX, curY);\n        doc.setFontSize(12);\n        addY(DETAIL);\n        doc.text(\n          `${format(edu.fromDate, 'dd/MM/yyyy')} - ${\n            edu.isOngoing ? 'Current' : format(edu.toDate, 'dd/MM/yyyy')\n          }`,\n          curX,\n          curY\n        );\n\n        // small separator\n        addY(SMALL_SEPARATOR);\n        doc.line(curX, curY, 100, curY, 'F');\n      });\n    },\n    addWorkExperiences: (workExperiences) => {\n      // Heading\n      doc.setFont('Helvetica', 'bold');\n      doc.setFontSize(20);\n      addY(HEADING);\n      doc.text('Work Experience', curX, curY);\n\n      // separator\n      addY(SEPARATOR);\n      doc.line(curX, curY, 160, curY, 'F');\n\n      workExperiences.forEach((work) => {\n        // subHeading\n        doc.setFont('Helvetica', 'bold');\n        doc.setFontSize(16);\n        addY(SUB_HEADING);\n        doc.text(work.occupationTitle, curX, curY);\n\n        //details\n        doc.setFont('Helvetica', 'normal');\n        doc.setFontSize(14);\n        addY(DETAIL);\n        doc.text(work.employer, curX, curY);\n        doc.setFontSize(12);\n        addY(DETAIL);\n        doc.text(\n          `${format(work.fromDate, 'dd/MM/yyyy')} - ${\n            work.isOngoing ? 'Current' : format(work.toDate, 'dd/MM/yyyy')\n          }`,\n          curX,\n          curY\n        );\n\n        const lines = work.responsibilities.trim().split('\\n'); // trying not to shit too much!\n        lines.forEach((line) => {\n          if (line.length > 90) {\n            let l = line;\n            const subLines = [];\n\n            while (l.length > 90) {\n              subLines.push(`${l.substring(0, 90)}`);\n              l = l.substring(90);\n            }\n            subLines.push(l.trim());\n\n            subLines.forEach((l) => {\n              addY(DETAIL);\n              doc.text(l, curX, curY);\n            });\n          } else {\n            if (line) {\n              addY(DETAIL);\n              doc.text(line, curX, curY);\n            }\n          }\n        });\n\n        // small separator\n        addY(SMALL_SEPARATOR);\n        doc.line(curX, curY, 100, curY, 'F');\n      });\n    },\n    saveFile: (title) => {\n      doc.save(title);\n    }\n  };\n};\n\nexport default CVFactory;\n","import AppHeader from './AppHeader';\n\nexport default AppHeader;\n","import React from 'react';\nimport { AppBar, Box, Typography } from '@material-ui/core';\n\nexport default class AppHeader extends React.Component {\n  render() {\n    return (\n      <AppBar>\n        <Box p={1.25}>\n          <Typography variant='h4' component='h1'>\n            CV-Application\n          </Typography>\n          <Typography variant='subtitle1' component='h2'>\n            Make your CV!\n          </Typography>\n        </Box>\n      </AppBar>\n    );\n  }\n}\n","import PersonalInformationInput from './PersonalInformationInput';\n\nexport default PersonalInformationInput;\n","import React from 'react';\nimport { TextField, Grid, Button, Box } from '@material-ui/core';\nimport PhoneField from 'material-ui-phone-number';\n\nexport default class PersonalInformationInput extends React.Component {\n  render() {\n    const { firstName, lastName, email, phoneNumber } = this.props.info;\n    const { handleChange, handleClick, isEditable, errors } = this.props;\n\n    return (\n      <React.Fragment>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            variant='filled'\n            label='First Name'\n            id='first-name'\n            fullWidth\n            error={!!errors.firstName}\n            helperText={errors.firstName}\n            value={firstName}\n            onChange={(e) => handleChange('firstName', e.target.value)}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            variant='filled'\n            label='Last Name'\n            id='last-name'\n            fullWidth\n            error={!!errors.lastName}\n            helperText={errors.lastName}\n            value={lastName}\n            onChange={(e) => handleChange('lastName', e.target.value)}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            variant='filled'\n            label='Email'\n            type='email'\n            id='email'\n            fullWidth\n            error={!!errors.email}\n            helperText={errors.email}\n            value={email}\n            onChange={(e) => handleChange('email', e.target.value)}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <PhoneField\n            variant='filled'\n            label='Phone Number'\n            id='phone-number'\n            fullWidth\n            defaultCountry={'us'}\n            error={!!errors.phoneNumber}\n            helperText={errors.phoneNumber}\n            value={phoneNumber}\n            onChange={(value) => handleChange('phoneNumber', value)}\n          />\n        </Grid>\n        {isEditable && (\n          <Grid item xs={12} sm={6}>\n            <Box display='grid' gridTemplateColumns='90px'>\n              <Button\n                variant='contained'\n                color='primary'\n                onClick={handleClick}\n                disabled={!errors.isValid}\n              >\n                Save\n              </Button>\n            </Box>\n          </Grid>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n","import PersonalInformationView from './PersonalInformationView';\n\nexport default PersonalInformationView;\n","import React from 'react';\nimport { Divider, Grid, Typography, Button, Box } from '@material-ui/core';\n\nexport default class PersonalInformationView extends React.Component {\n  render() {\n    const { firstName, lastName, email, phoneNumber } = this.props.info;\n    const { handleClick } = this.props;\n\n    return (\n      <React.Fragment>\n        <Grid item xs={12}>\n          <Box\n            display='grid'\n            justifyContent='space-between'\n            gridTemplateColumns='1fr 90px'\n            alignItems='start'\n          >\n            <Box>\n              <Typography variant='h6'>{firstName + ' ' + lastName}</Typography>\n\n              <Typography variant='subtitle1'>{email}</Typography>\n              <Typography variant='subtitle1'>{phoneNumber}</Typography>\n            </Box>\n            <Box display='grid'>\n              <Button variant='contained' color='primary' onClick={handleClick}>\n                Edit\n              </Button>\n            </Box>\n          </Box>\n          <Box mt={2.5} width='50%'>\n            <Divider />\n          </Box>\n        </Grid>\n      </React.Fragment>\n    );\n  }\n}\n","import PersonalInformationSection from './PersonalInformationSection';\n\nexport default PersonalInformationSection;\n","import React from 'react';\nimport { Box, Typography, Divider, Grid } from '@material-ui/core';\nimport PersonalInformationInput from './PersonalInformationInput';\nimport PersonalInformationView from './PersonalInformationView';\n\nexport default class PersonalInformationSection extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isEditable: false\n    };\n  }\n\n  handleEdit = () => {\n    this.setState((curState) => ({\n      isEditable: !curState.isEditable\n    }));\n  };\n\n  shouldComponentUpdate(nextProp, nextState) {\n    return (\n      nextProp.personalInfo !== this.props.personalInfo ||\n      nextProp.isEditableForm !== this.props.isEditableForm ||\n      nextState.isEditable !== this.state.isEditable ||\n      nextProp.errors !== this.props.errors\n    );\n  }\n\n  render() {\n    return (\n      <Box component='section'>\n        <Typography variant='h5' component='h3'>\n          Personal Information\n        </Typography>\n        <Divider />\n        <Box mt={2.5}>\n          <Grid container spacing={2}>\n            {this.props.isEditableForm ||\n            this.state.isEditable ||\n            !this.props.errors.isValid ? (\n              <PersonalInformationInput\n                info={this.props.personalInfo}\n                errors={this.props.errors}\n                handleChange={this.props.handleChange}\n                handleClick={this.handleEdit}\n                isEditable={this.state.isEditable}\n              />\n            ) : (\n              <PersonalInformationView\n                info={this.props.personalInfo}\n                handleClick={this.handleEdit}\n              />\n            )}\n          </Grid>\n        </Box>\n      </Box>\n    );\n  }\n}\n","import EducationInput from './EducationInput';\n\nexport default EducationInput;\n","import React from 'react';\nimport {\n  TextField,\n  FormControlLabel,\n  Switch,\n  Grid,\n  Button,\n  Box\n} from '@material-ui/core';\nimport { KeyboardDatePicker } from '@material-ui/pickers';\n\nexport default class EducationInput extends React.Component {\n  render() {\n    const {\n      qualificationTitle,\n      organization,\n      fromDate,\n      toDate,\n      isOngoing,\n      id\n    } = this.props.education;\n    const {\n      handleChange,\n      isAlone,\n      handleClick,\n      isEditableForm,\n      handleDeleteClick,\n      errors\n    } = this.props;\n\n    return (\n      <Grid container spacing={2} alignItems='flex-start'>\n        <Grid item xs={12}>\n          <TextField\n            variant='filled'\n            label='Title of qualification awarded'\n            id='title-qualification'\n            fullWidth\n            error={!!errors.qualificationTitle}\n            helperText={errors.qualificationTitle}\n            value={qualificationTitle}\n            onChange={(e) =>\n              handleChange('qualificationTitle', e.target.value, id)\n            }\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            variant='filled'\n            label='Organization providing education and training'\n            id='education-organization'\n            fullWidth\n            error={!!errors.organization}\n            helperText={errors.organization}\n            value={organization}\n            onChange={(e) => handleChange('organization', e.target.value, id)}\n          />\n        </Grid>\n\n        <Grid item xs={12} sm={6} md={5}>\n          <KeyboardDatePicker\n            inputVariant='filled'\n            format='dd/MM/yyyy'\n            label='From'\n            id='edu-from-date'\n            fullWidth\n            placeholder='14/01/1970'\n            disableFuture\n            error={!!errors.fromDate}\n            helperText={errors.fromDate}\n            value={fromDate}\n            onChange={(date) => handleChange('fromDate', date, id)}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6} md={5}>\n          <KeyboardDatePicker\n            inputVariant='filled'\n            format='dd/MM/yyyy'\n            label='To'\n            id='edu-to-date'\n            fullWidth\n            placeholder='14/01/1971'\n            disableFuture\n            error={!!errors.toDate}\n            helperText={errors.toDate}\n            value={toDate}\n            onChange={(date) => handleChange('toDate', date, id)}\n            disabled={isOngoing}\n          />\n        </Grid>\n        <Grid item xs={12} md={2}>\n          <FormControlLabel\n            control={\n              <Switch\n                color='primary'\n                id='edu-to-ongoing-date'\n                checked={isOngoing}\n                onChange={() => handleChange('isOngoing', !isOngoing, id)}\n              />\n            }\n            label='Ongoing'\n          />\n        </Grid>\n        {!isEditableForm && (\n          <Grid item xs={12} sm={6}>\n            <Box display='grid' gridTemplateColumns='90px'>\n              <Button\n                variant='contained'\n                color='primary'\n                onClick={handleClick}\n                disabled={!errors.isValid || !errors.areFieldsCompleted}\n              >\n                Save\n              </Button>\n            </Box>\n          </Grid>\n        )}\n        {isEditableForm && !isAlone && (\n          <Grid item xs={12} sm={6}>\n            <Box display='grid' gridTemplateColumns='90px'>\n              <Button\n                variant='contained'\n                color='secondary'\n                onClick={() => handleDeleteClick(id)}\n              >\n                Delete\n              </Button>\n            </Box>\n          </Grid>\n        )}\n      </Grid>\n    );\n  }\n}\n","import EducationView from './EducationView';\n\nexport default EducationView;\n","import React from 'react';\nimport { Grid, Typography, Button, Box } from '@material-ui/core';\nimport { format } from 'date-fns';\n\nexport default class EducationView extends React.Component {\n  render() {\n    const {\n      qualificationTitle,\n      organization,\n      fromDate,\n      toDate,\n      isOngoing,\n      id\n    } = this.props.education;\n    const { handleEditClick, handleDeleteClick, isAlone } = this.props;\n\n    return (\n      <Grid container spacing={2} alignItems='flex-end'>\n        <Grid item xs={12}>\n          <Box\n            display='grid'\n            justifyContent='space-between'\n            gridTemplateColumns='1fr 90px'\n            alignItems='start'\n          >\n            <Box>\n              <Typography variant='h6'>{qualificationTitle}</Typography>\n              <Typography variant='subtitle1'>{organization}</Typography>\n              <Typography variant='subtitle1'>\n                {format(fromDate, 'dd/MM/yyyy') +\n                  (isOngoing\n                    ? ' - ongoing'\n                    : ` - ${format(toDate, 'dd/MM/yyyy')}`)}\n              </Typography>\n            </Box>\n            <Box display='grid' gridRowGap='16px'>\n              <Button\n                variant='contained'\n                color='primary'\n                onClick={handleEditClick}\n              >\n                Edit\n              </Button>\n              {!isAlone && (\n                <Button\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => handleDeleteClick(id)}\n                >\n                  Delete\n                </Button>\n              )}\n            </Box>\n          </Box>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n","import EducationItem from './EducationItem';\n\nexport default EducationItem;\n","import React from 'react';\n\nimport EducationInput from './EducationInput';\nimport EducationView from './EducationView';\n\nexport default class EducationItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isEditable: true\n    };\n  }\n\n  handleEdit = () => {\n    this.setState((curState) => ({\n      isEditable: !curState.isEditable\n    }));\n  };\n\n  shouldComponentUpdate(nextProp, nextState) {\n    if (nextProp.isEditableForm !== this.props.isEditableForm) {\n      this.setState((prevState) => {\n        if (prevState.isEditable && !nextProp.isEditableForm) {\n          return { isEditable: false };\n        }\n      });\n    }\n\n    return (\n      nextProp.education !== this.props.education ||\n      nextProp.isEditableForm !== this.props.isEditableForm ||\n      nextProp.isAlone !== this.props.isAlone ||\n      nextState.isEditable !== this.state.isEditable ||\n      nextProp.errors !== this.props.errors\n    );\n  }\n\n  render() {\n    const {\n      education,\n      handleChange,\n      isEditableForm,\n      handleDelete,\n      isAlone,\n      errors\n    } = this.props;\n\n    return (\n      <React.Fragment>\n        {this.state.isEditable || !errors.isValid ? (\n          <EducationInput\n            education={education}\n            errors={errors}\n            handleChange={handleChange}\n            handleClick={this.handleEdit}\n            handleDeleteClick={handleDelete}\n            isEditableForm={isEditableForm}\n            isAlone={isAlone}\n          />\n        ) : (\n          <EducationView\n            education={education}\n            handleEditClick={this.handleEdit}\n            handleDeleteClick={handleDelete}\n            isAlone={isAlone}\n          />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n","import EducationList from './EducationList';\n\nexport default EducationList;\n","import React from 'react';\n\nimport { Divider, Box, List, ListItem } from '@material-ui/core';\nimport EducationItem from './EducationItem';\n\nexport default class EducationList extends React.Component {\n  shouldComponentUpdate(nextProp) {\n    return (\n      nextProp.educations !== this.props.educations ||\n      nextProp.isEditableForm !== this.props.isEditableForm ||\n      nextProp.errorsList !== this.props.errorList\n    );\n  }\n\n  render() {\n    const {\n      educations,\n      handleChange,\n      isEditableForm,\n      handleDelete,\n      errorsList\n    } = this.props;\n\n    return (\n      <List disablePadding>\n        {educations.map((education) => (\n          <ListItem\n            key={education.id}\n            disableGutters\n            style={{ padding: 0, flexDirection: 'column' }}\n          >\n            <Box minWidth='100%'>\n              <EducationItem\n                education={education}\n                errors={errorsList.find((e) => e.id === education.id)}\n                handleChange={handleChange}\n                isEditableForm={isEditableForm}\n                handleDelete={handleDelete}\n                isAlone={educations.length <= 1}\n              />\n              <Box my={2.5} width='50%'>\n                <Divider />\n              </Box>\n            </Box>\n          </ListItem>\n        ))}\n      </List>\n    );\n  }\n}\n","import EducationSection from './EducationSection';\n\nexport default EducationSection;\n","import React from 'react';\nimport { Box, Typography, Divider, Button, Grid } from '@material-ui/core';\n\nimport EducationList from './EducationList';\n\nexport default class EducationSection extends React.Component {\n  shouldComponentUpdate(nextProp) {\n    return (\n      nextProp.educations !== this.props.educations ||\n      nextProp.isEditableForm !== this.props.isEditableForm ||\n      nextProp.errorsList !== this.props.errorList\n    );\n  }\n\n  render() {\n    const {\n      educations,\n      handleChange,\n      isEditableForm,\n      handleAdd,\n      handleDelete,\n      errorsList\n    } = this.props;\n\n    return (\n      <Box component='section'>\n        <Typography variant='h5' component='h3'>\n          Education and Training\n        </Typography>\n        <Divider />\n        <Box mt={2.5}>\n          <EducationList\n            educations={educations}\n            errorsList={errorsList}\n            handleChange={handleChange}\n            isEditableForm={isEditableForm}\n            handleDelete={handleDelete}\n          />\n          <Grid item xs={12} md={2}>\n            <Button\n              variant='contained'\n              color='primary'\n              size='large'\n              fullWidth\n              onClick={handleAdd}\n            >\n              Add\n            </Button>\n          </Grid>\n        </Box>\n      </Box>\n    );\n  }\n}\n","import WorkExperienceInput from './WorkExperienceInput';\n\nexport default WorkExperienceInput;\n","import React from 'react';\nimport {\n  TextField,\n  FormControlLabel,\n  Switch,\n  Grid,\n  Button,\n  Box\n} from '@material-ui/core';\nimport { KeyboardDatePicker } from '@material-ui/pickers';\n\nexport default class WorkExperienceInput extends React.Component {\n  render() {\n    const {\n      occupationTitle,\n      employer,\n      fromDate,\n      toDate,\n      isOngoing,\n      responsibilities,\n      id\n    } = this.props.workExperience;\n    const {\n      handleChange,\n      isAlone,\n      handleClick,\n      isEditableForm,\n      handleDeleteClick,\n      errors\n    } = this.props;\n\n    return (\n      <Grid container spacing={2} alignItems='flex-start'>\n        <Grid item xs={12}>\n          <TextField\n            variant='filled'\n            label='Title of the occupation'\n            id='title-occupation'\n            fullWidth\n            error={!!errors.occupationTitle}\n            helperText={errors.occupationTitle}\n            value={occupationTitle}\n            onChange={(e) =>\n              handleChange('occupationTitle', e.target.value, id)\n            }\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            variant='filled'\n            label='Employer'\n            id='employer'\n            fullWidth\n            error={!!errors.employer}\n            helperText={errors.employer}\n            value={employer}\n            onChange={(e) => handleChange('employer', e.target.value, id)}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6} md={5}>\n          <KeyboardDatePicker\n            inputVariant='filled'\n            format='dd/MM/yyyy'\n            label='From'\n            id='work-from-date'\n            fullWidth\n            placeholder='14/01/1970'\n            disableFuture\n            error={!!errors.fromDate}\n            helperText={errors.fromDate}\n            value={fromDate}\n            onChange={(date) => handleChange('fromDate', date, id)}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6} md={5}>\n          <KeyboardDatePicker\n            inputVariant='filled'\n            format='dd/MM/yyyy'\n            label='To'\n            id='work-to-date'\n            fullWidth\n            placeholder='14/01/1971'\n            disableFuture\n            error={!!errors.toDate}\n            helperText={errors.toDate}\n            value={toDate}\n            onChange={(date) => handleChange('toDate', date, id)}\n            disabled={isOngoing}\n          />\n        </Grid>\n        <Grid item xs={12} md={2}>\n          <FormControlLabel\n            control={\n              <Switch\n                color='primary'\n                id='work-to-ongoing-date'\n                checked={isOngoing}\n                onChange={() => handleChange('isOngoing', !isOngoing, id)}\n              />\n            }\n            label='Ongoing'\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            variant='filled'\n            label='Main activities and responsibilities'\n            id='activities'\n            rows='4'\n            multiline\n            fullWidth\n            value={responsibilities}\n            onChange={(e) =>\n              handleChange('responsibilities', e.target.value, id)\n            }\n          />\n        </Grid>\n        {!isEditableForm && (\n          <Grid item xs={12} sm={6}>\n            <Box display='grid' gridTemplateColumns='90px'>\n              <Button\n                variant='contained'\n                color='primary'\n                onClick={handleClick}\n                disabled={!errors.isValid || !errors.areFieldsCompleted}\n              >\n                Save\n              </Button>\n            </Box>\n          </Grid>\n        )}\n        {isEditableForm && !isAlone && (\n          <Grid item xs={12} sm={6}>\n            <Box display='grid' gridTemplateColumns='90px'>\n              <Button\n                variant='contained'\n                color='secondary'\n                onClick={() => handleDeleteClick(id)}\n              >\n                Delete\n              </Button>\n            </Box>\n          </Grid>\n        )}\n      </Grid>\n    );\n  }\n}\n","import WorkExperienceView from './WorkExperienceView';\n\nexport default WorkExperienceView;\n","import React from 'react';\nimport { Grid, Typography, Button, Box } from '@material-ui/core';\nimport { format } from 'date-fns';\n\nexport default class EducationView extends React.Component {\n  render() {\n    const {\n      occupationTitle,\n      employer,\n      fromDate,\n      toDate,\n      isOngoing,\n      responsibilities,\n      id\n    } = this.props.workExperience;\n    const { handleEditClick, handleDeleteClick, isAlone } = this.props;\n\n    return (\n      <Grid container spacing={2} alignItems='flex-end'>\n        <Grid item xs={12}>\n          <Box\n            display='grid'\n            justifyContent='space-between'\n            gridTemplateColumns='1fr 90px'\n            alignItems='start'\n          >\n            <Box>\n              <Typography variant='h6'>{occupationTitle}</Typography>\n              <Typography variant='subtitle1'>{employer}</Typography>\n              <Typography variant='subtitle1'>{responsibilities}</Typography>\n              <Typography variant='subtitle1'>\n                {format(fromDate, 'dd/MM/yyyy') +\n                  (isOngoing\n                    ? ' - ongoing'\n                    : ` - ${format(toDate, 'dd/MM/yyyy')}`)}\n              </Typography>\n            </Box>\n            <Box display='grid' gridRowGap='16px'>\n              <Button\n                variant='contained'\n                color='primary'\n                onClick={handleEditClick}\n              >\n                Edit\n              </Button>\n              {!isAlone && (\n                <Button\n                  variant='contained'\n                  color='secondary'\n                  onClick={() => handleDeleteClick(id)}\n                >\n                  Delete\n                </Button>\n              )}\n            </Box>\n          </Box>\n        </Grid>\n      </Grid>\n    );\n  }\n}\n","import WorkExperienceItem from './WorkExperienceItem';\n\nexport default WorkExperienceItem;\n","import React from 'react';\n\nimport WorkExperienceInput from './WorkExperienceInput';\nimport WorkExperienceView from './WorkExperienceView';\n\nexport default class WorkExperienceItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isEditable: true\n    };\n  }\n\n  handleEdit = () => {\n    this.setState((curState) => ({\n      isEditable: !curState.isEditable\n    }));\n  };\n\n  shouldComponentUpdate(nextProp, nextState) {\n    if (nextProp.isEditableForm !== this.props.isEditableForm) {\n      this.setState((prevState) => {\n        if (prevState.isEditable && !nextProp.isEditableForm) {\n          return { isEditable: false };\n        }\n      });\n    }\n\n    return (\n      nextProp.workExperience !== this.props.workExperience ||\n      nextProp.isEditableForm !== this.props.isEditableForm ||\n      nextProp.isAlone !== this.props.isAlone ||\n      nextState.isEditable !== this.state.isEditable ||\n      nextProp.errors !== this.props.errors\n    );\n  }\n\n  render() {\n    const {\n      workExperience,\n      handleChange,\n      isEditableForm,\n      handleDelete,\n      isAlone,\n      errors\n    } = this.props;\n\n    return (\n      <React.Fragment>\n        {this.state.isEditable || !errors.isValid ? (\n          <WorkExperienceInput\n            workExperience={workExperience}\n            errors={errors}\n            handleChange={handleChange}\n            handleClick={this.handleEdit}\n            handleDeleteClick={handleDelete}\n            isEditableForm={isEditableForm}\n            isAlone={isAlone}\n          />\n        ) : (\n          <WorkExperienceView\n            workExperience={workExperience}\n            handleEditClick={this.handleEdit}\n            handleDeleteClick={handleDelete}\n            isAlone={isAlone}\n          />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n","import WorkExperienceList from './WorkExperienceList';\n\nexport default WorkExperienceList;\n","import React from 'react';\n\nimport { Divider, Box, List, ListItem } from '@material-ui/core';\nimport WorkExperienceItem from './WorkExperienceItem';\n\nexport default class WorkExperienceList extends React.Component {\n  shouldComponentUpdate(nextProp) {\n    return (\n      nextProp.workExperiences !== this.props.workExperiences ||\n      nextProp.isEditableForm !== this.props.isEditableForm ||\n      nextProp.errorsList !== this.props.errorList\n    );\n  }\n\n  render() {\n    const {\n      workExperiences,\n      handleChange,\n      isEditableForm,\n      handleDelete,\n      errorsList\n    } = this.props;\n\n    return (\n      <List disablePadding>\n        {workExperiences.map((workExperience) => (\n          <ListItem\n            key={workExperience.id}\n            disableGutters\n            style={{ padding: 0, flexDirection: 'column' }}\n          >\n            <Box minWidth='100%'>\n              <WorkExperienceItem\n                workExperience={workExperience}\n                errors={errorsList.find((e) => e.id === workExperience.id)}\n                handleChange={handleChange}\n                isEditableForm={isEditableForm}\n                handleDelete={handleDelete}\n                isAlone={workExperiences.length <= 1}\n              />\n              <Box my={2.5} width='50%'>\n                <Divider />\n              </Box>\n            </Box>\n          </ListItem>\n        ))}\n      </List>\n    );\n  }\n}\n","import WorkExperienceSection from './WorkExperienceSection';\n\nexport default WorkExperienceSection;\n","import React from 'react';\nimport { Box, Typography, Divider, Grid, Button } from '@material-ui/core';\n\nimport WorkExperienceList from './WorkExperienceList';\n\nexport default class WorkExperienceSection extends React.Component {\n  shouldComponentUpdate(nextProp) {\n    return (\n      nextProp.workExperiences !== this.props.workExperiences ||\n      nextProp.isEditableForm !== this.props.isEditableForm ||\n      nextProp.errorsList !== this.props.errorList\n    );\n  }\n\n  render() {\n    const {\n      workExperiences,\n      handleChange,\n      isEditableForm,\n      handleAdd,\n      handleDelete,\n      errorsList\n    } = this.props;\n\n    return (\n      <Box component='section'>\n        <Typography variant='h5' component='h3'>\n          Work Experience\n        </Typography>\n        <Divider />\n        <Box mt={2.5}>\n          <WorkExperienceList\n            workExperiences={workExperiences}\n            errorsList={errorsList}\n            handleChange={handleChange}\n            isEditableForm={isEditableForm}\n            handleDelete={handleDelete}\n          />\n          <Grid item xs={12} md={2}>\n            <Button\n              variant='contained'\n              color='primary'\n              size='large'\n              fullWidth\n              onClick={handleAdd}\n            >\n              Add\n            </Button>\n          </Grid>\n        </Box>\n      </Box>\n    );\n  }\n}\n","import CreateCVSection from './CreateCVSection';\n\nexport default CreateCVSection;\n","import React from 'react';\nimport { Box, Typography, Divider, Button, Grid } from '@material-ui/core';\n\nexport default class CreateCVSection extends React.PureComponent {\n  render() {\n    return (\n      <Box component='section'>\n        <Typography variant='h5' component='h3'>\n          Create the CV\n        </Typography>\n        <Divider />\n        <Box mt={2.5}>\n          <Grid container>\n            <Grid item xs={12} md={2}>\n              <Button variant='contained' size='large' fullWidth type='submit'>\n                {this.props.isEditableForm ? 'Preview' : 'Create PDF'}\n              </Button>\n            </Grid>\n            <Grid item xs={12}>\n              <Typography variant='subtitle1' color='textSecondary'>\n                Complete all fields and continue!\n              </Typography>\n            </Grid>\n          </Grid>\n        </Box>\n      </Box>\n    );\n  }\n}\n","const validateName = (value) => {\n  if (!value) return 'This field is required';\n  if (value.length > 50) return 'Maximum Length is 50';\n\n  return '';\n};\n\nconst validateEmail = (value) => {\n  if (!value) return 'This field is required';\n  if (value.length > 50) return 'Maximum Length is 50';\n  if (!value.match(/\\S+@\\S+\\.\\S+/)) return 'Wrong email format';\n\n  return '';\n};\n\nconst validatePhone = (value) => {\n  if (value.match(/^\\+?$/)) return 'This field is required';\n\n  return '';\n};\n\nconst validateStartDate = (start, end) => {\n  if (!start) return 'This field is required';\n  if (isNaN(start)) return 'Fill the correct date';\n  if (start > new Date()) return 'Is a future date';\n  if (!end || isNaN(end)) return '';\n  if (start.getTime() > end.getTime())\n    return 'Start date cannot be smaller than end date';\n\n  return '';\n};\n\nconst validateEndDate = (end, start) => {\n  if (!end) return 'This field is required';\n  if (isNaN(end)) return 'Fill the correct date';\n  if (end > new Date()) return 'Is a future date';\n  if (!start || isNaN(start)) return '';\n  if (start.getTime() > end.getTime())\n    return 'Start date cannot be smaller than end date';\n\n  return '';\n};\n\nconst hasErrors = (errors) => {\n  if (errors.find((e) => e !== '')) {\n    return true;\n  }\n\n  return false;\n};\n\nconst isPersonalInformationValid = (errors) => {\n  const { firstName, lastName, email, phoneNumber } = errors;\n\n  return !hasErrors(Object.values({ firstName, lastName, email, phoneNumber }));\n};\n\nconst isEducationValid = (errors) => {\n  const { qualificationTitle, organization, fromDate, toDate } = errors;\n\n  return !hasErrors(\n    Object.values({ qualificationTitle, organization, fromDate, toDate })\n  );\n};\n\nconst isWorkExperienceValid = (errors) => {\n  const { occupationTitle, employer, fromDate, toDate } = errors;\n\n  return !hasErrors(\n    Object.values({ occupationTitle, employer, fromDate, toDate })\n  );\n};\n\nconst validatePersonalInformation = (personalInformation) => {\n  const { firstName, lastName, email, phoneNumber } = personalInformation;\n\n  const errors = {\n    firstName: validateName(firstName),\n    lastName: validateName(lastName),\n    email: validateEmail(email),\n    phoneNumber: validatePhone(phoneNumber)\n  };\n\n  return {\n    isValid: !hasErrors(Object.values(errors)),\n    ...errors\n  };\n};\n\nconst validateEducations = (educations) => {\n  const errorsList = educations.map((education) => {\n    const {\n      qualificationTitle,\n      organization,\n      fromDate,\n      toDate,\n      isOngoing,\n      id\n    } = education;\n    const errors = {\n      qualificationTitle: validateName(qualificationTitle),\n      organization: validateName(organization),\n      fromDate: validateStartDate(fromDate, !isOngoing && toDate),\n      toDate: isOngoing ? '' : validateEndDate(toDate, fromDate)\n    };\n\n    return {\n      id,\n      isValid: !hasErrors(Object.values(errors)),\n      ...errors\n    };\n  });\n\n  return errorsList;\n};\n\nconst validateWorkExperiences = (workExperiences) => {\n  const errorsList = workExperiences.map((workExperience) => {\n    const {\n      occupationTitle,\n      employer,\n      fromDate,\n      toDate,\n      isOngoing,\n      id\n    } = workExperience;\n\n    const errors = {\n      occupationTitle: validateName(occupationTitle),\n      employer: validateName(employer),\n      fromDate: validateStartDate(fromDate, !isOngoing && toDate),\n      toDate: isOngoing ? '' : validateEndDate(toDate, fromDate)\n    };\n\n    return {\n      id,\n      isValid: !hasErrors(Object.values(errors)),\n      ...errors\n    };\n  });\n\n  return errorsList;\n};\n\nconst areEducationCompleted = (education) => {\n  const {\n    qualificationTitle,\n    organization,\n    fromDate,\n    toDate,\n    isOngoing\n  } = education;\n\n  return (\n    !!qualificationTitle &&\n    !!organization &&\n    !!fromDate &&\n    (isOngoing || !!toDate)\n  );\n};\n\nconst areWorkExperienceCompleted = (workExperience) => {\n  const {\n    occupationTitle,\n    employer,\n    fromDate,\n    toDate,\n    isOngoing\n  } = workExperience;\n\n  return (\n    !!occupationTitle && !!employer && !!fromDate && (isOngoing || !!toDate)\n  );\n};\n\nconst validateForm = (personalInfo, educations, workExperiences) => {\n  const sectionsErrors = {\n    personalInfo: validatePersonalInformation(personalInfo),\n    educations: validateEducations(educations),\n    workExperiences: validateWorkExperiences(workExperiences)\n  };\n\n  const foundInvalidEducation = sectionsErrors.educations.find(\n    (ed) => !ed.isValid\n  );\n  const areEducationsValid = foundInvalidEducation ? false : true;\n\n  const foundInvalidWorkExperience = sectionsErrors.workExperiences.find(\n    (w) => !w.isValid\n  );\n\n  const areWorkExperiencesValid = foundInvalidWorkExperience ? false : true;\n\n  return [\n    sectionsErrors.personalInfo.isValid &&\n      areEducationsValid &&\n      areWorkExperiencesValid,\n    sectionsErrors\n  ];\n};\n\nexport default {\n  validateName,\n  validateEmail,\n  validatePhone,\n  validateStartDate,\n  validateEndDate,\n  hasErrors,\n  validatePersonalInformation,\n  validateEducations,\n  validateWorkExperiences,\n  isPersonalInformationValid,\n  isEducationValid,\n  isWorkExperienceValid,\n  areEducationCompleted,\n  areWorkExperienceCompleted,\n  validateForm\n};\n","import CVForm from './CVForm';\n\nexport default CVForm;\n","import React from 'react';\nimport { Grid } from '@material-ui/core';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport PersonalInformationSection from './PersonalInformationSection';\nimport EducationSection from './EducationSection';\nimport WorkExperienceSection from './WorkExperienceSection';\nimport CreateCVSection from './CreateCVSection';\n\nimport validator from '../../lib/validator';\n\nexport default class CVForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const initEducationID = uuidv4();\n    const initWorkExperienceID = uuidv4();\n\n    this.state = {\n      personalInfo: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        phoneNumber: ''\n      },\n      educations: [\n        {\n          id: initEducationID,\n          qualificationTitle: '',\n          organization: '',\n          fromDate: null,\n          toDate: null,\n          isOngoing: false\n        }\n      ],\n      workExperiences: [\n        {\n          id: initWorkExperienceID,\n          occupationTitle: '',\n          employer: '',\n          fromDate: null,\n          toDate: null,\n          isOngoing: false,\n          responsibilities: ''\n        }\n      ],\n      sectionsErrors: {\n        personalInfo: {\n          isValid: false,\n          firstName: '',\n          lastName: '',\n          email: '',\n          phoneNumber: ''\n        },\n        educations: [\n          {\n            isValid: false,\n            id: initEducationID,\n            qualificationTitle: '',\n            organization: '',\n            fromDate: '',\n            toDate: '',\n            areFieldsCompleted: false\n          }\n        ],\n        workExperiences: [\n          {\n            isValid: false,\n            id: initWorkExperienceID,\n            occupationTitle: '',\n            employer: '',\n            fromDate: '',\n            toDate: '',\n            responsibilities: '',\n            areFieldsCompleted: false\n          }\n        ]\n      },\n      isEditableForm: true,\n      isPreview: false\n    };\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { personalInfo, educations, workExperiences } = this.state;\n\n    if (!this.state.isPreview) {\n      const [isValid, sectionsErrors] = validator.validateForm(\n        personalInfo,\n        educations,\n        workExperiences\n      );\n\n      if (isValid) {\n        window.scrollTo(0, 0);\n        this.setState({ isEditableForm: false, isPreview: true });\n      } else {\n        this.setState({ sectionsErrors });\n      }\n    } else {\n      const [isValid, sectionsErrors] = validator.validateForm(\n        personalInfo,\n        educations,\n        workExperiences\n      );\n\n      if (isValid) {\n        this.props.onCVCreate({ personalInfo, educations, workExperiences });\n      } else {\n        this.setState({ sectionsErrors });\n      }\n    }\n  };\n\n  handlePersonalInfoChange = (field, value) => {\n    this.setState((prevState) => {\n      let state = {\n        personalInfo: { ...prevState.personalInfo },\n        sectionsErrors: {\n          ...prevState.sectionsErrors,\n          personalInfo: { ...prevState.sectionsErrors.personalInfo }\n        }\n      };\n      const { personalInfo: errors } = state.sectionsErrors;\n\n      switch (field) {\n        case 'firstName': {\n          state.personalInfo.firstName = value;\n          errors.firstName = validator.validateName(value);\n          break;\n        }\n        case 'lastName': {\n          state.personalInfo.lastName = value;\n          errors.lastName = validator.validateName(value);\n          break;\n        }\n        case 'email': {\n          state.personalInfo.email = value;\n          errors.email = validator.validateEmail(value);\n          break;\n        }\n        case 'phoneNumber': {\n          state.personalInfo.phoneNumber = value;\n          errors.phoneNumber = validator.validatePhone(value);\n          break;\n        }\n      }\n\n      errors.isValid = validator.isPersonalInformationValid(errors);\n\n      return state;\n    });\n  };\n\n  handleAddEducation = () => {\n    this.setState((prevState) => {\n      let state = {\n        educations: prevState.educations.map((e) => ({ ...e })),\n        sectionsErrors: {\n          ...prevState.sectionsErrors,\n          educations: prevState.sectionsErrors.educations.map((e) => ({ ...e }))\n        }\n      };\n\n      const id = uuidv4();\n\n      state.educations.push({\n        qualificationTitle: '',\n        organization: '',\n        fromDate: null,\n        toDate: null,\n        isOngoing: false,\n        id\n      });\n\n      state.sectionsErrors.educations.push({\n        isValid: false,\n        id,\n        qualificationTitle: '',\n        organization: '',\n        fromDate: '',\n        toDate: '',\n        areFieldsCompleted: false\n      });\n\n      return state;\n    });\n  };\n\n  handleDeleteEducation = (id) => {\n    this.setState((prevState) => {\n      let state = {\n        educations: prevState.educations.filter((e) => e.id !== id),\n        sectionsErrors: {\n          ...prevState.sectionsErrors,\n          educations: prevState.sectionsErrors.educations.filter(\n            (e) => e.id !== id\n          )\n        }\n      };\n\n      return state;\n    });\n  };\n\n  handleEducationChange = (field, value, id) => {\n    this.setState((prevState) => {\n      let state = {\n        educations: prevState.educations.map((e) => ({ ...e })),\n        sectionsErrors: {\n          ...prevState.sectionsErrors,\n          educations: prevState.sectionsErrors.educations.map((e) => ({ ...e }))\n        }\n      };\n\n      const education = state.educations.find((edu) => edu.id === id);\n      const errors = state.sectionsErrors.educations.find(\n        (edu) => edu.id === id\n      );\n\n      switch (field) {\n        case 'qualificationTitle': {\n          education.qualificationTitle = value;\n          errors.qualificationTitle = validator.validateName(value);\n          break;\n        }\n        case 'organization': {\n          education.organization = value;\n          errors.organization = validator.validateName(value);\n          break;\n        }\n        case 'fromDate': {\n          education.fromDate = value;\n          errors.fromDate = validator.validateStartDate(\n            value,\n            !education.isOngoing && education.toDate\n          );\n\n          if (!errors.fromDate && errors.toDate)\n            errors.toDate = validator.validateEndDate(education.toDate, value);\n          break;\n        }\n        case 'toDate': {\n          education.toDate = value;\n          errors.toDate = education.isOngoing\n            ? ''\n            : validator.validateEndDate(value, education.fromDate);\n\n          if (!errors.toDate && errors.fromDate)\n            errors.fromDate = validator.validateStartDate(\n              education.fromDate,\n              value\n            );\n          break;\n        }\n        case 'isOngoing': {\n          education.isOngoing = value;\n          if (value) {\n            errors.fromDate = validator.validateStartDate(\n              education.fromDate,\n              null\n            );\n            errors.toDate = '';\n          } else {\n            errors.toDate = validator.validateEndDate(\n              education.toDate,\n              education.fromDate\n            );\n          }\n          break;\n        }\n      }\n\n      errors.isValid = validator.isEducationValid(errors);\n      errors.areFieldsCompleted = validator.areEducationCompleted(education);\n\n      return state;\n    });\n  };\n\n  handleAddWorkExperience = () => {\n    this.setState((prevState) => {\n      let state = {\n        workExperiences: prevState.workExperiences.map((w) => ({ ...w })),\n        sectionsErrors: {\n          ...prevState.sectionsErrors,\n          workExperiences: prevState.sectionsErrors.workExperiences.map(\n            (w) => ({ ...w })\n          )\n        }\n      };\n\n      const id = uuidv4();\n\n      state.workExperiences.push({\n        occupationTitle: '',\n        employer: '',\n        fromDate: null,\n        toDate: null,\n        isOngoing: false,\n        responsibilities: '',\n        id\n      });\n\n      state.sectionsErrors.workExperiences.push({\n        isValid: false,\n        id,\n        occupationTitle: '',\n        employer: '',\n        fromDate: '',\n        toDate: '',\n        responsibilities: '',\n        areFieldsCompleted: false\n      });\n\n      return state;\n    });\n  };\n\n  handleDeleteWorkExperience = (id) => {\n    this.setState((prevState) => {\n      let state = {\n        workExperiences: prevState.workExperiences.filter((w) => w.id !== id),\n        sectionsErrors: {\n          ...prevState.sectionsErrors,\n          workExperiences: prevState.sectionsErrors.workExperiences.filter(\n            (w) => w.id !== id\n          )\n        }\n      };\n\n      return state;\n    });\n  };\n\n  handleWorkExperienceChange = (field, value, id) => {\n    this.setState((prevState) => {\n      let state = {\n        workExperiences: prevState.workExperiences.map((w) => ({ ...w })),\n        sectionsErrors: {\n          ...prevState.sectionsErrors,\n          workExperiences: prevState.sectionsErrors.workExperiences.map(\n            (w) => ({ ...w })\n          )\n        }\n      };\n      const workExperience = state.workExperiences.find((w) => w.id === id);\n      const errors = state.sectionsErrors.workExperiences.find(\n        (w) => w.id === id\n      );\n\n      switch (field) {\n        case 'occupationTitle': {\n          workExperience.occupationTitle = value;\n          errors.occupationTitle = validator.validateName(value);\n          break;\n        }\n        case 'employer': {\n          workExperience.employer = value;\n          errors.employer = validator.validateName(value);\n          break;\n        }\n        case 'fromDate': {\n          workExperience.fromDate = value;\n          errors.fromDate = validator.validateStartDate(\n            value,\n            !workExperience.isOngoing && workExperience.toDate\n          );\n\n          if (!errors.fromDate && errors.toDate)\n            errors.toDate = validator.validateEndDate(\n              workExperience.toDate,\n              value\n            );\n          break;\n        }\n        case 'toDate': {\n          workExperience.toDate = value;\n          errors.toDate = workExperience.isOngoing\n            ? ''\n            : validator.validateEndDate(value, workExperience.fromDate);\n\n          if (!errors.toDate && errors.fromDate)\n            errors.fromDate = validator.validateStartDate(\n              workExperience.fromDate,\n              value\n            );\n          break;\n        }\n        case 'isOngoing': {\n          workExperience.isOngoing = value;\n          if (value) {\n            errors.fromDate = validator.validateStartDate(\n              workExperience.fromDate,\n              null\n            );\n            errors.toDate = '';\n          } else {\n            errors.toDate = validator.validateEndDate(\n              workExperience.toDate,\n              workExperience.fromDate\n            );\n          }\n          break;\n        }\n        case 'responsibilities': {\n          workExperience.responsibilities = value;\n          break;\n        }\n      }\n\n      errors.isValid = validator.isWorkExperienceValid(errors);\n      errors.areFieldsCompleted = validator.areWorkExperienceCompleted(\n        workExperience\n      );\n\n      return state;\n    });\n  };\n\n  render() {\n    const {\n      personalInfo,\n      educations,\n      workExperiences,\n      isEditableForm,\n      sectionsErrors\n    } = this.state;\n\n    return (\n      <Grid container component='form' spacing={3} onSubmit={this.handleSubmit}>\n        {/* Personal Information */}\n        <Grid item xs={12}>\n          <PersonalInformationSection\n            personalInfo={personalInfo}\n            errors={sectionsErrors.personalInfo}\n            handleChange={this.handlePersonalInfoChange}\n            isEditableForm={isEditableForm}\n          />\n        </Grid>\n        {/* Education and Training*/}\n        <Grid item xs={12}>\n          <EducationSection\n            educations={educations}\n            errorsList={sectionsErrors.educations}\n            handleChange={this.handleEducationChange}\n            handleAdd={this.handleAddEducation}\n            handleDelete={this.handleDeleteEducation}\n            isEditableForm={isEditableForm}\n          />\n        </Grid>\n        {/* Work Experience */}\n        <Grid item xs={12}>\n          <WorkExperienceSection\n            workExperiences={workExperiences}\n            errorsList={sectionsErrors.workExperiences}\n            handleChange={this.handleWorkExperienceChange}\n            handleAdd={this.handleAddWorkExperience}\n            handleDelete={this.handleDeleteWorkExperience}\n            isEditableForm={isEditableForm}\n          />\n        </Grid>\n        {/* Create the CV */}\n        <Grid item xs={12}>\n          <CreateCVSection isEditableForm={isEditableForm} />\n        </Grid>\n      </Grid>\n    );\n  }\n}\n","import React from 'react';\nimport { Box, CssBaseline, Container } from '@material-ui/core';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n\nimport CVFactory from './lib/cvPDF';\n\nimport AppHeader from './components/AppHeader';\nimport CVForm from './components/CVForm';\n\nexport default class App extends React.Component {\n  onCVCreate = ({ personalInfo, educations, workExperiences }) => {\n    const cv = CVFactory();\n    cv.addPersonalInfo(personalInfo);\n    cv.addEducations(educations);\n    cv.addWorkExperiences(workExperiences);\n\n    cv.saveFile('my-cv.pdf');\n  };\n\n  render() {\n    const darkTheme = createMuiTheme({\n      palette: {\n        type: 'dark'\n      }\n    });\n\n    return (\n      <ThemeProvider theme={darkTheme}>\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n          <CssBaseline />\n          <AppHeader />\n          <Container>\n            <Box my={14} component='main'>\n              <CVForm onCVCreate={this.onCVCreate} />\n            </Box>\n          </Container>\n        </MuiPickersUtilsProvider>\n      </ThemeProvider>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}